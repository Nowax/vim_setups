!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BOOST_CONTEXT_TUPLE	coroutine/v1/detail/arg.hpp	44;"	d
BOOST_CONTEXT_TUPLE	coroutine/v1/detail/arg.hpp	51;"	d
BOOST_CONTEXT_TUPLE_COMMA	coroutine/v1/detail/arg.hpp	40;"	d
BOOST_CONTEXT_TUPLE_COMMA	coroutine/v1/detail/arg.hpp	54;"	d
BOOST_CONTEXT_TUPLE_TYPE	coroutine/v1/detail/arg.hpp	41;"	d
BOOST_CONTEXT_TUPLE_TYPE	coroutine/v1/detail/arg.hpp	53;"	d
BOOST_CONTEXT_TUPLE_TYPES	coroutine/v1/detail/arg.hpp	43;"	d
BOOST_CONTEXT_TUPLE_TYPES	coroutine/v1/detail/arg.hpp	52;"	d
BOOST_COROUTINES_ALL_H	coroutine/all.hpp	8;"	d
BOOST_COROUTINES_ATTRIBUTES_H	coroutine/attributes.hpp	8;"	d
BOOST_COROUTINES_BUILD_DLL	coroutine/detail/config.hpp	20;"	d
BOOST_COROUTINES_CHECKPOINT_H	coroutine/checkpoint.hpp	8;"	d
BOOST_COROUTINES_COROUTINE_H	coroutine/coroutine.hpp	8;"	d
BOOST_COROUTINES_DECL	coroutine/detail/config.hpp	14;"	d
BOOST_COROUTINES_DECL	coroutine/detail/config.hpp	19;"	d
BOOST_COROUTINES_DECL	coroutine/detail/config.hpp	22;"	d
BOOST_COROUTINES_DECL	coroutine/detail/config.hpp	27;"	d
BOOST_COROUTINES_DETAIL_CONFIG_H	coroutine/detail/config.hpp	8;"	d
BOOST_COROUTINES_DETAIL_COROUTINE_CONTEXT_H	coroutine/detail/coroutine_context.hpp	8;"	d
BOOST_COROUTINES_DETAIL_EXCEPTIONS_H	coroutine/detail/exceptions.hpp	8;"	d
BOOST_COROUTINES_DETAIL_FLAGS_H	coroutine/detail/flags.hpp	8;"	d
BOOST_COROUTINES_DETAIL_HOLDER_H	coroutine/detail/holder.hpp	8;"	d
BOOST_COROUTINES_DETAIL_PARAM_H	coroutine/detail/param.hpp	8;"	d
BOOST_COROUTINES_DETAIL_SEGMENTED_STACK_ALLOCATOR_H	coroutine/detail/segmented_stack_allocator.hpp	8;"	d
BOOST_COROUTINES_DETAIL_STACK_ALLOCATOR_H	coroutine/stack_allocator.hpp	8;"	d
BOOST_COROUTINES_DETAIL_STACK_TUPLE_H	coroutine/detail/stack_tuple.hpp	8;"	d
BOOST_COROUTINES_DETAIL_STANDARD_STACK_ALLOCATOR_H	coroutine/detail/standard_stack_allocator.hpp	8;"	d
BOOST_COROUTINES_DETAIL_TRAMPOLINE_H	coroutine/detail/trampoline.hpp	8;"	d
BOOST_COROUTINES_EXCEPTIONS_H	coroutine/exceptions.hpp	8;"	d
BOOST_COROUTINES_FLAGS_H	coroutine/flags.hpp	8;"	d
BOOST_COROUTINES_OLD	coroutine/detail/config.hpp	50;"	d
BOOST_COROUTINES_OLD	coroutine/detail/config.hpp	54;"	d
BOOST_COROUTINES_OLD_COROUTINE_H	coroutine/v1/coroutine.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_ARG_H	coroutine/v1/detail/arg.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_COROUTINE_BASE_H	coroutine/v1/detail/coroutine_base.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_COROUTINE_BASE_RESUME_H	coroutine/v1/detail/coroutine_base_resume.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_COROUTINE_CALLER_H	coroutine/v1/detail/coroutine_caller.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_COROUTINE_GET_H	coroutine/v1/detail/coroutine_get.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_COROUTINE_OBJECT_H	coroutine/v1/detail/coroutine_object.hpp	8;"	d
BOOST_COROUTINES_OLD_DETAIL_COROUTINE_OP_H	coroutine/v1/detail/coroutine_op.hpp	8;"	d
BOOST_COROUTINES_SEGMENTS	coroutine/detail/config.hpp	42;"	d
BOOST_COROUTINES_STACK_CONTEXT_H	coroutine/stack_context.hpp	8;"	d
BOOST_COROUTINES_UNIDIRECT	coroutine/detail/config.hpp	46;"	d
BOOST_COROUTINES_UNIDIRECT	coroutine/detail/config.hpp	58;"	d
BOOST_COROUTINES_UNIDIRECT_COROUTINE_H	coroutine/v2/coroutine.hpp	8;"	d
BOOST_COROUTINES_UNIDIRECT_DETAIL_PULL_COROUTINE_BASE_H	coroutine/v2/detail/pull_coroutine_base.hpp	8;"	d
BOOST_COROUTINES_UNIDIRECT_DETAIL_PULL_COROUTINE_CALLER_H	coroutine/v2/detail/pull_coroutine_caller.hpp	7;"	d
BOOST_COROUTINES_UNIDIRECT_DETAIL_PULL_COROUTINE_OBJECT_H	coroutine/v2/detail/pull_coroutine_object.hpp	8;"	d
BOOST_COROUTINES_UNIDIRECT_DETAIL_PUSH_COROUTINE_BASE_H	coroutine/v2/detail/push_coroutine_base.hpp	8;"	d
BOOST_COROUTINES_UNIDIRECT_DETAIL_PUSH_COROUTINE_CALLER_H	coroutine/v2/detail/push_coroutine_caller.hpp	7;"	d
BOOST_COROUTINES_UNIDIRECT_DETAIL_PUSH_COROUTINE_OBJECT_H	coroutine/v2/detail/push_coroutine_object.hpp	8;"	d
BOOST_COROUTINE_BASE_RESUME	coroutine/v1/detail/coroutine_base_resume.hpp	159;"	d
BOOST_COROUTINE_BASE_RESUME	coroutine/v1/detail/coroutine_base_resume.hpp	223;"	d
BOOST_COROUTINE_BASE_RESUME_ARG	coroutine/v1/detail/coroutine_base_resume.hpp	157;"	d
BOOST_COROUTINE_BASE_RESUME_ARG	coroutine/v1/detail/coroutine_base_resume.hpp	225;"	d
BOOST_COROUTINE_BASE_RESUME_ARGS	coroutine/v1/detail/coroutine_base_resume.hpp	158;"	d
BOOST_COROUTINE_BASE_RESUME_ARGS	coroutine/v1/detail/coroutine_base_resume.hpp	224;"	d
BOOST_COROUTINE_BASE_RESUME_ARG_TYPE	coroutine/v1/detail/coroutine_base_resume.hpp	155;"	d
BOOST_COROUTINE_BASE_RESUME_ARG_TYPE	coroutine/v1/detail/coroutine_base_resume.hpp	226;"	d
BOOST_COROUTINE_BASE_RESUME_COMMA	coroutine/v1/detail/coroutine_base_resume.hpp	152;"	d
BOOST_COROUTINE_BASE_RESUME_COMMA	coroutine/v1/detail/coroutine_base_resume.hpp	229;"	d
BOOST_COROUTINE_BASE_RESUME_VAL	coroutine/v1/detail/coroutine_base_resume.hpp	153;"	d
BOOST_COROUTINE_BASE_RESUME_VAL	coroutine/v1/detail/coroutine_base_resume.hpp	228;"	d
BOOST_COROUTINE_BASE_RESUME_VALS	coroutine/v1/detail/coroutine_base_resume.hpp	154;"	d
BOOST_COROUTINE_BASE_RESUME_VALS	coroutine/v1/detail/coroutine_base_resume.hpp	227;"	d
BOOST_COROUTINE_OP	coroutine/v1/detail/coroutine_op.hpp	297;"	d
BOOST_COROUTINE_OP	coroutine/v1/detail/coroutine_op.hpp	312;"	d
BOOST_COROUTINE_OP_ARG	coroutine/v1/detail/coroutine_op.hpp	295;"	d
BOOST_COROUTINE_OP_ARG	coroutine/v1/detail/coroutine_op.hpp	314;"	d
BOOST_COROUTINE_OP_ARGS	coroutine/v1/detail/coroutine_op.hpp	296;"	d
BOOST_COROUTINE_OP_ARGS	coroutine/v1/detail/coroutine_op.hpp	313;"	d
BOOST_COROUTINE_OP_ARG_TYPE	coroutine/v1/detail/coroutine_op.hpp	293;"	d
BOOST_COROUTINE_OP_ARG_TYPE	coroutine/v1/detail/coroutine_op.hpp	315;"	d
BOOST_COROUTINE_OP_COMMA	coroutine/v1/detail/coroutine_op.hpp	290;"	d
BOOST_COROUTINE_OP_COMMA	coroutine/v1/detail/coroutine_op.hpp	318;"	d
BOOST_COROUTINE_OP_VAL	coroutine/v1/detail/coroutine_op.hpp	291;"	d
BOOST_COROUTINE_OP_VAL	coroutine/v1/detail/coroutine_op.hpp	317;"	d
BOOST_COROUTINE_OP_VALS	coroutine/v1/detail/coroutine_op.hpp	292;"	d
BOOST_COROUTINE_OP_VALS	coroutine/v1/detail/coroutine_op.hpp	316;"	d
BOOST_DYN_LINK	coroutine/detail/config.hpp	33;"	d
BOOST_LIB_NAME	coroutine/detail/config.hpp	31;"	d
BOOST_NOEXCEPT	coroutine/attributes.hpp	/^            flag_fpu_t preserve_fpu_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
BOOST_NOEXCEPT	coroutine/attributes.hpp	/^            flag_unwind_t do_unwind_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    attributes() BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    explicit attributes( flag_fpu_t preserve_fpu_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    explicit attributes( flag_unwind_t do_unwind_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    explicit attributes( std::size_t size_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
BOOST_NOEXCEPT	coroutine/exceptions.hpp	/^BOOST_COROUTINES_DECL system::error_category const& coroutine_category() BOOST_NOEXCEPT;$/;"	m	namespace:boost::coroutines
BOOST_SCOPED_ENUM_DECLARE_BEGIN	coroutine/exceptions.hpp	/^BOOST_SCOPED_ENUM_DECLARE_BEGIN(coroutine_errc)$/;"	f	namespace:boost::coroutines	signature:(coroutine_errc)
__splitstack_makecontext	coroutine/detail/coroutine_context.hpp	/^extern "C"  void *__splitstack_makecontext($/;"	p	signature:( std::size_t, void * [BOOST_COROUTINES_SEGMENTS], std::size_t *)
alloc	coroutine/v1/coroutine.hpp	/^               Allocator const& alloc,$/;"	m	class:boost::coroutines::coroutine	access:public
alloc	coroutine/v1/coroutine.hpp	/^               std::allocator< coroutine > const& alloc =$/;"	m	class:boost::coroutines::coroutine::std	access:public
alloc	coroutine/v2/coroutine.hpp	/^               Allocator const& alloc,$/;"	m	class:boost::coroutines::push_coroutine	access:public
alloc	coroutine/v2/coroutine.hpp	/^               std::allocator< pull_coroutine > const& alloc =$/;"	m	class:boost::coroutines::pull_coroutine::std	access:public
alloc	coroutine/v2/coroutine.hpp	/^               std::allocator< push_coroutine > const& alloc =$/;"	m	class:boost::coroutines::push_coroutine::std	access:public
alloc	coroutine/v2/coroutine.hpp	/^           Allocator const& alloc,$/;"	m	namespace:boost::coroutines
alloc	coroutine/v2/coroutine.hpp	/^           std::allocator< push_coroutine > const& alloc,$/;"	m	class:boost::coroutines::std
alloc_	coroutine/v1/detail/coroutine_caller.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::coroutine_caller	access:public	signature:( alloc)
alloc_	coroutine/v1/detail/coroutine_caller.hpp	/^    allocator_t   alloc_;$/;"	m	class:boost::coroutines::detail::coroutine_caller	access:private
alloc_	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( alloc)
alloc_	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    allocator_t   alloc_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_caller	access:private
alloc_	coroutine/v2/detail/pull_coroutine_object.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( alloc)
alloc_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    allocator_t             alloc_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:private
alloc_	coroutine/v2/detail/push_coroutine_caller.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::push_coroutine_caller	access:public	signature:( alloc)
alloc_	coroutine/v2/detail/push_coroutine_caller.hpp	/^    allocator_t   alloc_;$/;"	m	class:boost::coroutines::detail::push_coroutine_caller	access:private
alloc_	coroutine/v2/detail/push_coroutine_object.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( alloc)
alloc_	coroutine/v2/detail/push_coroutine_object.hpp	/^    allocator_t             alloc_;$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:private
allocate	coroutine/detail/segmented_stack_allocator.hpp	/^    void allocate( stack_context &, std::size_t = minimum_stacksize() );$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:( stack_context &, std::size_t = minimum_stacksize() )
allocate	coroutine/detail/standard_stack_allocator.hpp	/^    void allocate( stack_context &, std::size_t);$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:( stack_context &, std::size_t)
allocator_t	coroutine/v1/detail/coroutine_caller.hpp	/^    >::other   allocator_t;$/;"	t	class:boost::coroutines::detail::coroutine_caller	access:public
allocator_t	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    >::other   allocator_t;$/;"	t	class:boost::coroutines::detail::pull_coroutine_caller	access:public
allocator_t	coroutine/v2/detail/pull_coroutine_object.hpp	/^    >::other                                            allocator_t;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:public
allocator_t	coroutine/v2/detail/push_coroutine_caller.hpp	/^    >::other   allocator_t;$/;"	t	class:boost::coroutines::detail::push_coroutine_caller	access:public
allocator_t	coroutine/v2/detail/push_coroutine_object.hpp	/^    >::other                                            allocator_t;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:public
arg	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
arg	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
arg	coroutine/v1/detail/arg.hpp	/^struct arg< Signature, 1 >$/;"	s	namespace:boost::coroutines::detail
arg_type	coroutine/v1/detail/coroutine_base_resume.hpp	/^    typedef typename arg< Signature >::type     arg_type;$/;"	t	class:boost::coroutines::detail::coroutine_base_resume	access:public
arg_type	coroutine/v1/detail/coroutine_op.hpp	/^    typedef typename arg< Signature >::type   arg_type;$/;"	t	struct:boost::coroutines::detail::coroutine_op	access:public
arguments	coroutine/v1/coroutine.hpp	/^    typedef typename detail::arg< Signature >::type             arguments;$/;"	t	class:boost::coroutines::coroutine	access:public
attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
attr	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::pull_coroutine	access:public
attr	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::push_coroutine	access:public
attr	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::push_coroutine	access:public
attr	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
attr	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
attr	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
attr	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:public
attr	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
attributes	coroutine/attributes.hpp	/^struct attributes$/;"	s	namespace:boost::coroutines
base_t	coroutine/v1/coroutine.hpp	/^    typedef detail::coroutine_base< Signature >                 base_t;$/;"	t	class:boost::coroutines::coroutine	access:private
base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::pull_coroutine_base< R & >  base_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::pull_coroutine_base< R >    base_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::pull_coroutine_base< void > base_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::push_coroutine_base< Arg & >    base_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::push_coroutine_base< Arg >  base_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::push_coroutine_base< void >  base_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^        base_type($/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( trampoline1< pull_coroutine_object >, & this->stack_ctx, stack_unwind == attr.do_unwind, fpu_preserved == attr.preserve_fpu)
base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef pull_coroutine_base< R & >                  base_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef pull_coroutine_base< R >                    base_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef pull_coroutine_base< void >                 base_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^        base_type($/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( trampoline1< push_coroutine_object >, & this->stack_ctx, stack_unwind == attr.do_unwind, fpu_preserved == attr.preserve_fpu)
base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< Arg & >                 base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< Arg & >                base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< Arg >                  base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< void >                 base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
begin	coroutine/v1/coroutine.hpp	/^begin( coroutine< Signature > & c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > & c)
begin	coroutine/v1/coroutine.hpp	/^begin( coroutine< Signature > const& c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const& c)
begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::pull_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > & c)
begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::pull_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > const& c)
begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::push_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > & c)
begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::push_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > const& c)
boost	coroutine/attributes.hpp	/^namespace boost {$/;"	n
boost	coroutine/checkpoint.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/coroutine_context.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/exceptions.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/flags.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/holder.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/param.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/segmented_stack_allocator.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/stack_tuple.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/standard_stack_allocator.hpp	/^namespace boost {$/;"	n
boost	coroutine/detail/trampoline.hpp	/^namespace boost {$/;"	n
boost	coroutine/exceptions.hpp	/^namespace boost {$/;"	n
boost	coroutine/flags.hpp	/^namespace boost {$/;"	n
boost	coroutine/stack_allocator.hpp	/^namespace boost {$/;"	n
boost	coroutine/stack_context.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/coroutine.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/arg.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/coroutine_base.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/coroutine_base_resume.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/coroutine_caller.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/coroutine_get.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/coroutine_object.hpp	/^namespace boost {$/;"	n
boost	coroutine/v1/detail/coroutine_op.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/coroutine.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/detail/pull_coroutine_base.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/detail/pull_coroutine_caller.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/detail/pull_coroutine_object.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/detail/push_coroutine_base.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/detail/push_coroutine_caller.hpp	/^namespace boost {$/;"	n
boost	coroutine/v2/detail/push_coroutine_object.hpp	/^namespace boost {$/;"	n
boost::coroutines	coroutine/attributes.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/checkpoint.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/coroutine_context.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/exceptions.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/flags.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/holder.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/param.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/segmented_stack_allocator.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/stack_tuple.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/standard_stack_allocator.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/detail/trampoline.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/exceptions.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/flags.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/stack_allocator.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/stack_context.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/coroutine.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/arg.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/coroutine_base.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/coroutine_base_resume.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/coroutine_caller.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/coroutine_get.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/coroutine_object.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v1/detail/coroutine_op.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/coroutine.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/detail/pull_coroutine_base.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/detail/pull_coroutine_caller.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/detail/pull_coroutine_object.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/detail/push_coroutine_base.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/detail/push_coroutine_caller.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines	coroutine/v2/detail/push_coroutine_object.hpp	/^namespace coroutines {$/;"	n	namespace:boost
boost::coroutines::BOOST_NOEXCEPT	coroutine/exceptions.hpp	/^BOOST_COROUTINES_DECL system::error_category const& coroutine_category() BOOST_NOEXCEPT;$/;"	m	namespace:boost::coroutines
boost::coroutines::BOOST_SCOPED_ENUM_DECLARE_BEGIN	coroutine/exceptions.hpp	/^BOOST_SCOPED_ENUM_DECLARE_BEGIN(coroutine_errc)$/;"	f	namespace:boost::coroutines	signature:(coroutine_errc)
boost::coroutines::alloc	coroutine/v2/coroutine.hpp	/^           Allocator const& alloc,$/;"	m	namespace:boost::coroutines
boost::coroutines::attr	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
boost::coroutines::attr	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
boost::coroutines::attr	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
boost::coroutines::attributes	coroutine/attributes.hpp	/^struct attributes$/;"	s	namespace:boost::coroutines
boost::coroutines::attributes::BOOST_NOEXCEPT	coroutine/attributes.hpp	/^            flag_fpu_t preserve_fpu_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::BOOST_NOEXCEPT	coroutine/attributes.hpp	/^            flag_unwind_t do_unwind_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    attributes() BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    explicit attributes( flag_fpu_t preserve_fpu_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    explicit attributes( flag_unwind_t do_unwind_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::BOOST_NOEXCEPT	coroutine/attributes.hpp	/^    explicit attributes( std::size_t size_) BOOST_NOEXCEPT :$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::do_unwind	coroutine/attributes.hpp	/^        do_unwind( do_unwind_),$/;"	p	struct:boost::coroutines::attributes	access:public	signature:( do_unwind_)
boost::coroutines::attributes::do_unwind	coroutine/attributes.hpp	/^        do_unwind( stack_unwind),$/;"	p	struct:boost::coroutines::attributes	access:public	signature:( stack_unwind)
boost::coroutines::attributes::do_unwind	coroutine/attributes.hpp	/^    flag_unwind_t   do_unwind;$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::preserve_fpu	coroutine/attributes.hpp	/^        preserve_fpu( fpu_preserved)$/;"	f	struct:boost::coroutines::attributes	access:public	signature:( fpu_preserved)
boost::coroutines::attributes::preserve_fpu	coroutine/attributes.hpp	/^        preserve_fpu( preserve_fpu_)$/;"	f	struct:boost::coroutines::attributes	access:public	signature:( preserve_fpu_)
boost::coroutines::attributes::preserve_fpu	coroutine/attributes.hpp	/^    flag_fpu_t      preserve_fpu;$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::attributes::size	coroutine/attributes.hpp	/^    std::size_t     size;$/;"	m	struct:boost::coroutines::attributes	access:public
boost::coroutines::begin	coroutine/v1/coroutine.hpp	/^begin( coroutine< Signature > & c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > & c)
boost::coroutines::begin	coroutine/v1/coroutine.hpp	/^begin( coroutine< Signature > const& c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const& c)
boost::coroutines::checkpoint	coroutine/checkpoint.hpp	/^class checkpoint$/;"	c	namespace:boost::coroutines
boost::coroutines::checkpoint::ctx_	coroutine/checkpoint.hpp	/^    context::fcontext_t ctx_;$/;"	m	class:boost::coroutines::checkpoint	access:private
boost::coroutines::checkpoint::sp_	coroutine/checkpoint.hpp	/^    void            *   sp_;$/;"	m	class:boost::coroutines::checkpoint	access:private
boost::coroutines::coroutine	coroutine/v1/coroutine.hpp	/^class coroutine : public detail::coroutine_op<$/;"	c	namespace:boost::coroutines	inherits:detail::coroutine_op,detail::coroutine_get
boost::coroutines::coroutine	coroutine/v1/coroutine.hpp	/^class coroutine< Signature, 0 > : public detail::coroutine_op<$/;"	c	namespace:boost::coroutines	inherits:detail::coroutine_op,detail::coroutine_get
boost::coroutines::coroutine	coroutine/v2/coroutine.hpp	/^struct coroutine$/;"	s	namespace:boost::coroutines
boost::coroutines::coroutine::alloc	coroutine/v1/coroutine.hpp	/^               Allocator const& alloc,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::arg	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::arg	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::arguments	coroutine/v1/coroutine.hpp	/^    typedef typename detail::arg< Signature >::type             arguments;$/;"	t	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::attr	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::base_t	coroutine/v1/coroutine.hpp	/^    typedef detail::coroutine_base< Signature >                 base_t;$/;"	t	class:boost::coroutines::coroutine	access:private
boost::coroutines::coroutine::caller_type	coroutine/v1/coroutine.hpp	/^    >::type                                                     caller_type;$/;"	t	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc)
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, arguments arg, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, arguments arg, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< coroutine > const& alloc = std::allocator< coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, arguments arg, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, arguments arg, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >() )
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >() )
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc)
boost::coroutines::coroutine::coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< coroutine > const& alloc = std::allocator< coroutine >() )
boost::coroutines::coroutine::coroutine_fn	coroutine/v1/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( caller_type &);$/;"	t	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::detail::coroutine_get	coroutine/v1/coroutine.hpp	/^        detail::coroutine_get<$/;"	p	class:boost::coroutines::coroutine::detail	access:public	signature:()
boost::coroutines::coroutine::detail::coroutine_op	coroutine/v1/coroutine.hpp	/^        detail::coroutine_op<$/;"	p	class:boost::coroutines::coroutine::detail	access:public	signature:()
boost::coroutines::coroutine::disable_if::type	coroutine/v1/coroutine.hpp	/^               >::type = 0) :$/;"	m	class:boost::coroutines::coroutine::disable_if	access:public
boost::coroutines::coroutine::dummy	coroutine/v1/coroutine.hpp	/^    struct dummy$/;"	s	class:boost::coroutines::coroutine	access:private
boost::coroutines::coroutine::dummy::nonnull	coroutine/v1/coroutine.hpp	/^    { void nonnull() {} };$/;"	f	struct:boost::coroutines::coroutine::dummy	access:public	signature:()
boost::coroutines::coroutine::fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::impl_	coroutine/v1/coroutine.hpp	/^        impl_()$/;"	f	class:boost::coroutines::coroutine	access:public	signature:()
boost::coroutines::coroutine::impl_	coroutine/v1/coroutine.hpp	/^    ptr_t  impl_;$/;"	m	class:boost::coroutines::coroutine	access:private
boost::coroutines::coroutine::ptr_t	coroutine/v1/coroutine.hpp	/^    typedef typename base_t::ptr_t                              ptr_t;$/;"	t	class:boost::coroutines::coroutine	access:private
boost::coroutines::coroutine::pull_type	coroutine/v2/coroutine.hpp	/^    typedef pull_coroutine< T > pull_type;$/;"	t	struct:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::push_type	coroutine/v2/coroutine.hpp	/^    typedef push_coroutine< T > push_type;$/;"	t	struct:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::safe_bool	coroutine/v1/coroutine.hpp	/^    typedef void ( dummy::*safe_bool)();$/;"	t	class:boost::coroutines::coroutine	access:private
boost::coroutines::coroutine::stack_alloc	coroutine/v1/coroutine.hpp	/^               StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::stack_alloc	coroutine/v1/coroutine.hpp	/^               stack_allocator const& stack_alloc =$/;"	m	class:boost::coroutines::coroutine	access:public
boost::coroutines::coroutine::std::alloc	coroutine/v1/coroutine.hpp	/^               std::allocator< coroutine > const& alloc =$/;"	m	class:boost::coroutines::coroutine::std	access:public
boost::coroutines::coroutine_error	coroutine/exceptions.hpp	/^class coroutine_error : public std::logic_error$/;"	c	namespace:boost::coroutines	inherits:std::logic_error
boost::coroutines::coroutine_error::coroutine_error	coroutine/exceptions.hpp	/^    coroutine_error( system::error_code ec) :$/;"	f	class:boost::coroutines::coroutine_error	access:public	signature:( system::error_code ec)
boost::coroutines::coroutine_error::ec_	coroutine/exceptions.hpp	/^    system::error_code  ec_;$/;"	m	class:boost::coroutines::coroutine_error	access:private
boost::coroutines::coroutine_error::what	coroutine/exceptions.hpp	/^    const char* what() const throw()$/;"	f	class:boost::coroutines::coroutine_error	access:public	signature:() const
boost::coroutines::detail	coroutine/detail/coroutine_context.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/exceptions.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/flags.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/holder.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/param.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/segmented_stack_allocator.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/stack_tuple.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/standard_stack_allocator.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/detail/trampoline.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/exceptions.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/coroutine.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/arg.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/coroutine_base.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/coroutine_base_resume.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/coroutine_caller.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/coroutine_get.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/coroutine_object.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v1/detail/coroutine_op.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v2/detail/pull_coroutine_base.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v2/detail/pull_coroutine_caller.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v2/detail/pull_coroutine_object.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v2/detail/push_coroutine_base.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v2/detail/push_coroutine_caller.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail	coroutine/v2/detail/push_coroutine_object.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
boost::coroutines::detail::arg	coroutine/v1/detail/arg.hpp	/^struct arg< Signature, 1 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::arg::type	coroutine/v1/detail/arg.hpp	/^    typedef typename function_traits< Signature >::arg1_type    type;$/;"	t	struct:boost::coroutines::detail::arg	access:public
boost::coroutines::detail::caller	coroutine/v1/coroutine.hpp	/^struct caller$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::caller	coroutine/v1/coroutine.hpp	/^struct caller< Signature, C, Result, 0 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::caller	coroutine/v1/coroutine.hpp	/^struct caller< Signature, C, void, 0 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::caller	coroutine/v1/coroutine.hpp	/^struct caller< Signature, C, void, arity >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::caller::type	coroutine/v1/coroutine.hpp	/^{ typedef C< typename detail::arg< Signature >::type( Result), 1 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
boost::coroutines::detail::caller::type	coroutine/v1/coroutine.hpp	/^{ typedef C< typename detail::arg< Signature >::type(), 0 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
boost::coroutines::detail::caller::type	coroutine/v1/coroutine.hpp	/^{ typedef C< void( Result), 1 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
boost::coroutines::detail::caller::type	coroutine/v1/coroutine.hpp	/^{ typedef C< void(), 0 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
boost::coroutines::detail::coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^class coroutine_base : private noncopyable,$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable,coroutine_base_resume
boost::coroutines::detail::coroutine_base::callee_	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_context   callee_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
boost::coroutines::detail::coroutine_base::caller_	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_context   caller_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
boost::coroutines::detail::coroutine_base::coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_base( coroutine_context const& callee, bool unwind, bool preserve_fpu) :$/;"	f	class:boost::coroutines::detail::coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu)
boost::coroutines::detail::coroutine_base::coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_base( coroutine_context::ctx_fn fn, stack_context * stack_ctx,$/;"	f	class:boost::coroutines::detail::coroutine_base	access:public	signature:( coroutine_context::ctx_fn fn, stack_context * stack_ctx, bool unwind, bool preserve_fpu)
boost::coroutines::detail::coroutine_base::deallocate_object	coroutine/v1/detail/coroutine_base.hpp	/^    virtual void deallocate_object() = 0;$/;"	p	class:boost::coroutines::detail::coroutine_base	access:protected	signature:()
boost::coroutines::detail::coroutine_base::except_	coroutine/v1/detail/coroutine_base.hpp	/^    exception_ptr       except_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
boost::coroutines::detail::coroutine_base::flags_	coroutine/v1/detail/coroutine_base.hpp	/^    int                 flags_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
boost::coroutines::detail::coroutine_base::ptr_t	coroutine/v1/detail/coroutine_base.hpp	/^    typedef intrusive_ptr< coroutine_base >     ptr_t;$/;"	t	class:boost::coroutines::detail::coroutine_base	access:public
boost::coroutines::detail::coroutine_base::use_count_	coroutine/v1/detail/coroutine_base.hpp	/^    unsigned int        use_count_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
boost::coroutines::detail::coroutine_base::~coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^    virtual ~coroutine_base()$/;"	f	class:boost::coroutines::detail::coroutine_base	access:public	signature:()
boost::coroutines::detail::coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, Result, 0 >$/;"	c	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, Result, 1 >$/;"	c	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, void, 0 >$/;"	c	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, void, 1 >$/;"	c	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_base_resume::arg_type	coroutine/v1/detail/coroutine_base_resume.hpp	/^    typedef typename arg< Signature >::type     arg_type;$/;"	t	class:boost::coroutines::detail::coroutine_base_resume	access:public
boost::coroutines::detail::coroutine_base_resume::result_	coroutine/v1/detail/coroutine_base_resume.hpp	/^    optional< Result >  result_;$/;"	m	class:boost::coroutines::detail::coroutine_base_resume	access:protected
boost::coroutines::detail::coroutine_base_resume::resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^    void resume( arg_type a1)$/;"	f	class:boost::coroutines::detail::coroutine_base_resume	access:public	signature:( arg_type a1)
boost::coroutines::detail::coroutine_base_resume::resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^    void resume()$/;"	f	class:boost::coroutines::detail::coroutine_base_resume	access:public	signature:()
boost::coroutines::detail::coroutine_caller	coroutine/v1/detail/coroutine_caller.hpp	/^class coroutine_caller : public  coroutine_base< Signature >$/;"	c	namespace:boost::coroutines::detail	inherits:coroutine_base
boost::coroutines::detail::coroutine_caller::alloc_	coroutine/v1/detail/coroutine_caller.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::coroutine_caller	access:public	signature:( alloc)
boost::coroutines::detail::coroutine_caller::alloc_	coroutine/v1/detail/coroutine_caller.hpp	/^    allocator_t   alloc_;$/;"	m	class:boost::coroutines::detail::coroutine_caller	access:private
boost::coroutines::detail::coroutine_caller::allocator_t	coroutine/v1/detail/coroutine_caller.hpp	/^    >::other   allocator_t;$/;"	t	class:boost::coroutines::detail::coroutine_caller	access:public
boost::coroutines::detail::coroutine_caller::coroutine_base	coroutine/v1/detail/coroutine_caller.hpp	/^        coroutine_base< Signature >( callee, unwind, preserve_fpu),$/;"	p	class:boost::coroutines::detail::coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu)
boost::coroutines::detail::coroutine_caller::deallocate_object	coroutine/v1/detail/coroutine_caller.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::coroutine_caller	access:public	signature:()
boost::coroutines::detail::coroutine_caller::destroy_	coroutine/v1/detail/coroutine_caller.hpp	/^    static void destroy_( allocator_t & alloc, coroutine_caller * p)$/;"	f	class:boost::coroutines::detail::coroutine_caller	access:private	signature:( allocator_t & alloc, coroutine_caller * p)
boost::coroutines::detail::coroutine_context	coroutine/detail/coroutine_context.hpp	/^class BOOST_COROUTINES_DECL coroutine_context : private context::fcontext_t,$/;"	c	namespace:boost::coroutines::detail	inherits:context::fcontext_t,stack_context
boost::coroutines::detail::coroutine_context::coroutine_context	coroutine/detail/coroutine_context.hpp	/^    coroutine_context( coroutine_context const&);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( coroutine_context const&)
boost::coroutines::detail::coroutine_context::coroutine_context	coroutine/detail/coroutine_context.hpp	/^    coroutine_context();$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:()
boost::coroutines::detail::coroutine_context::coroutine_context	coroutine/detail/coroutine_context.hpp	/^    explicit coroutine_context( ctx_fn, stack_context *);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( ctx_fn, stack_context *)
boost::coroutines::detail::coroutine_context::ctx_	coroutine/detail/coroutine_context.hpp	/^    context::fcontext_t *   ctx_;$/;"	m	class:boost::coroutines::detail::coroutine_context	access:private
boost::coroutines::detail::coroutine_context::ctx_fn	coroutine/detail/coroutine_context.hpp	/^    typedef void( * ctx_fn)( intptr_t);$/;"	t	class:boost::coroutines::detail::coroutine_context	access:public
boost::coroutines::detail::coroutine_context::jump	coroutine/detail/coroutine_context.hpp	/^    intptr_t jump( coroutine_context &, intptr_t = 0, bool = true);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( coroutine_context &, intptr_t = 0, bool = true)
boost::coroutines::detail::coroutine_context::operator =	coroutine/detail/coroutine_context.hpp	/^    coroutine_context& operator=( coroutine_context const&);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( coroutine_context const&)
boost::coroutines::detail::coroutine_context::stack_ctx_	coroutine/detail/coroutine_context.hpp	/^    stack_context       *   stack_ctx_;$/;"	m	class:boost::coroutines::detail::coroutine_context	access:private
boost::coroutines::detail::coroutine_get	coroutine/v1/detail/coroutine_get.hpp	/^struct coroutine_get$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_get	coroutine/v1/detail/coroutine_get.hpp	/^struct coroutine_get< D, void, arity >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_get::get	coroutine/v1/detail/coroutine_get.hpp	/^    typename param< Result >::type get() const$/;"	f	struct:boost::coroutines::detail::coroutine_get	access:public	signature:() const
boost::coroutines::detail::coroutine_get::has_result	coroutine/v1/detail/coroutine_get.hpp	/^    bool has_result() const$/;"	f	struct:boost::coroutines::detail::coroutine_get	access:public	signature:() const
boost::coroutines::detail::coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, Result, 0 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, Result, 1 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, void, 0 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, void, 1 >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::coroutine_op::arg_type	coroutine/v1/detail/coroutine_op.hpp	/^    typedef typename arg< Signature >::type   arg_type;$/;"	t	struct:boost::coroutines::detail::coroutine_op	access:public
boost::coroutines::detail::coroutine_op::const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^    class const_iterator : public std::iterator< std::input_iterator_tag, const typename remove_reference< Result >::type >$/;"	c	struct:boost::coroutines::detail::coroutine_op	inherits:std::iterator	access:public
boost::coroutines::detail::coroutine_op::const_iterator::const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator( const_iterator const& other) :$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::detail::coroutine_op::const_iterator::const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator() :$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:()
boost::coroutines::detail::coroutine_op::const_iterator::const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^        explicit const_iterator( D const* dp) :$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( D const* dp)
boost::coroutines::detail::coroutine_op::const_iterator::dp_	coroutine/v1/detail/coroutine_op.hpp	/^        D                   *   dp_;$/;"	m	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private
boost::coroutines::detail::coroutine_op::const_iterator::fetch_	coroutine/v1/detail/coroutine_op.hpp	/^        void fetch_()$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private	signature:()
boost::coroutines::detail::coroutine_op::const_iterator::increment_	coroutine/v1/detail/coroutine_op.hpp	/^        void increment_()$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private	signature:()
boost::coroutines::detail::coroutine_op::const_iterator::operator !=	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator!=( const_iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::detail::coroutine_op::const_iterator::operator *	coroutine/v1/detail/coroutine_op.hpp	/^        reference_t operator*() const$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:() const
boost::coroutines::detail::coroutine_op::const_iterator::operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator & operator++()$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:()
boost::coroutines::detail::coroutine_op::const_iterator::operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator operator++( int)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( int)
boost::coroutines::detail::coroutine_op::const_iterator::operator ->	coroutine/v1/detail/coroutine_op.hpp	/^        pointer_t operator->() const$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:() const
boost::coroutines::detail::coroutine_op::const_iterator::operator =	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator & operator=( const_iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::detail::coroutine_op::const_iterator::operator ==	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator==( const_iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::detail::coroutine_op::const_iterator::pointer_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename const_iterator::pointer      pointer_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public
boost::coroutines::detail::coroutine_op::const_iterator::reference_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename const_iterator::reference    reference_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public
boost::coroutines::detail::coroutine_op::const_iterator::val_	coroutine/v1/detail/coroutine_op.hpp	/^        optional< Result >      val_;$/;"	m	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private
boost::coroutines::detail::coroutine_op::iterator	coroutine/v1/detail/coroutine_op.hpp	/^    class iterator : public std::iterator< std::input_iterator_tag, typename remove_reference< Result >::type >$/;"	c	struct:boost::coroutines::detail::coroutine_op	inherits:std::iterator	access:public
boost::coroutines::detail::coroutine_op::iterator	coroutine/v1/detail/coroutine_op.hpp	/^    class iterator : public std::iterator< std::output_iterator_tag, void, void, void, void >$/;"	c	struct:boost::coroutines::detail::coroutine_op	inherits:std::iterator	access:public
boost::coroutines::detail::coroutine_op::iterator::dp_	coroutine/v1/detail/coroutine_op.hpp	/^        D               *   dp_;$/;"	m	class:boost::coroutines::detail::coroutine_op::iterator	access:private
boost::coroutines::detail::coroutine_op::iterator::dp_	coroutine/v1/detail/coroutine_op.hpp	/^       D    *   dp_;$/;"	m	class:boost::coroutines::detail::coroutine_op::iterator	access:private
boost::coroutines::detail::coroutine_op::iterator::fetch_	coroutine/v1/detail/coroutine_op.hpp	/^        void fetch_()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:private	signature:()
boost::coroutines::detail::coroutine_op::iterator::increment_	coroutine/v1/detail/coroutine_op.hpp	/^        void increment_()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:private	signature:()
boost::coroutines::detail::coroutine_op::iterator::iterator	coroutine/v1/detail/coroutine_op.hpp	/^        explicit iterator( D * dp) :$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( D * dp)
boost::coroutines::detail::coroutine_op::iterator::iterator	coroutine/v1/detail/coroutine_op.hpp	/^        iterator( iterator const& other) :$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
boost::coroutines::detail::coroutine_op::iterator::iterator	coroutine/v1/detail/coroutine_op.hpp	/^        iterator() :$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:()
boost::coroutines::detail::coroutine_op::iterator::operator !=	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator!=( iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
boost::coroutines::detail::coroutine_op::iterator::operator *	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator*()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:()
boost::coroutines::detail::coroutine_op::iterator::operator *	coroutine/v1/detail/coroutine_op.hpp	/^        reference_t operator*() const$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:() const
boost::coroutines::detail::coroutine_op::iterator::operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator++()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:()
boost::coroutines::detail::coroutine_op::iterator::operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        iterator operator++( int)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( int)
boost::coroutines::detail::coroutine_op::iterator::operator ->	coroutine/v1/detail/coroutine_op.hpp	/^        pointer_t operator->() const$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:() const
boost::coroutines::detail::coroutine_op::iterator::operator =	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator=( arg_type a1)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( arg_type a1)
boost::coroutines::detail::coroutine_op::iterator::operator =	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator=( iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
boost::coroutines::detail::coroutine_op::iterator::operator ==	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator==( iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
boost::coroutines::detail::coroutine_op::iterator::pointer_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename iterator::pointer      pointer_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::iterator	access:public
boost::coroutines::detail::coroutine_op::iterator::reference_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename iterator::reference    reference_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::iterator	access:public
boost::coroutines::detail::coroutine_op::iterator::val_	coroutine/v1/detail/coroutine_op.hpp	/^        optional< Result >  val_;$/;"	m	class:boost::coroutines::detail::coroutine_op::iterator	access:private
boost::coroutines::detail::coroutine_op::operator ()	coroutine/v1/detail/coroutine_op.hpp	/^    D & operator()( arg_type a1)$/;"	f	struct:boost::coroutines::detail::coroutine_op	access:public	signature:( arg_type a1)
boost::coroutines::detail::coroutine_op::operator ()	coroutine/v1/detail/coroutine_op.hpp	/^    D & operator()()$/;"	f	struct:boost::coroutines::detail::coroutine_op	access:public	signature:()
boost::coroutines::detail::flag_complete	coroutine/detail/flags.hpp	/^    flag_complete       = 1 << 1,$/;"	e	enum:boost::coroutines::detail::flag_t
boost::coroutines::detail::flag_force_unwind	coroutine/detail/flags.hpp	/^    flag_force_unwind   = 1 << 3,$/;"	e	enum:boost::coroutines::detail::flag_t
boost::coroutines::detail::flag_preserve_fpu	coroutine/detail/flags.hpp	/^    flag_preserve_fpu   = 1 << 4$/;"	e	enum:boost::coroutines::detail::flag_t
boost::coroutines::detail::flag_t	coroutine/detail/flags.hpp	/^enum flag_t$/;"	g	namespace:boost::coroutines::detail
boost::coroutines::detail::flag_unwind_stack	coroutine/detail/flags.hpp	/^    flag_unwind_stack   = 1 << 2,$/;"	e	enum:boost::coroutines::detail::flag_t
boost::coroutines::detail::forced_unwind	coroutine/detail/exceptions.hpp	/^struct forced_unwind {};$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::forced_unwind	coroutine/exceptions.hpp	/^struct forced_unwind {};$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::holder	coroutine/detail/holder.hpp	/^struct holder$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::holder	coroutine/detail/holder.hpp	/^struct holder< void >$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::holder::ctx	coroutine/detail/holder.hpp	/^    coroutine_context      *   ctx;$/;"	m	struct:boost::coroutines::detail::holder	access:public
boost::coroutines::detail::holder::ctx	coroutine/detail/holder.hpp	/^    coroutine_context  *   ctx;$/;"	m	struct:boost::coroutines::detail::holder	access:public
boost::coroutines::detail::holder::data	coroutine/detail/holder.hpp	/^    optional< Data >        data;$/;"	m	struct:boost::coroutines::detail::holder	access:public
boost::coroutines::detail::holder::force_unwind	coroutine/detail/holder.hpp	/^    bool                    force_unwind;$/;"	m	struct:boost::coroutines::detail::holder	access:public
boost::coroutines::detail::holder::force_unwind	coroutine/detail/holder.hpp	/^    bool                force_unwind;$/;"	m	struct:boost::coroutines::detail::holder	access:public
boost::coroutines::detail::holder::holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_)
boost::coroutines::detail::holder::holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_, Data data_) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_, Data data_)
boost::coroutines::detail::holder::holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_, bool force_unwind_ = false) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_, bool force_unwind_ = false)
boost::coroutines::detail::holder::holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_, bool force_unwind_) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_, bool force_unwind_)
boost::coroutines::detail::holder::holder	coroutine/detail/holder.hpp	/^    holder( holder const& other) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( holder const& other)
boost::coroutines::detail::holder::operator =	coroutine/detail/holder.hpp	/^    holder & operator=( holder const& other)$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( holder const& other)
boost::coroutines::detail::param	coroutine/detail/param.hpp	/^struct param : $/;"	s	namespace:boost::coroutines::detail	inherits:mpl::eval_if
boost::coroutines::detail::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^class pull_coroutine_base : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
boost::coroutines::detail::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^class pull_coroutine_base< R & > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
boost::coroutines::detail::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^class pull_coroutine_base< void > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
boost::coroutines::detail::pull_coroutine_base::callee_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    coroutine_context   callee_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
boost::coroutines::detail::pull_coroutine_base::caller_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    coroutine_context   caller_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
boost::coroutines::detail::pull_coroutine_base::deallocate_object	coroutine/v2/detail/pull_coroutine_base.hpp	/^    virtual void deallocate_object() = 0;$/;"	p	class:boost::coroutines::detail::pull_coroutine_base	access:protected	signature:()
boost::coroutines::detail::pull_coroutine_base::except_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    exception_ptr       except_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
boost::coroutines::detail::pull_coroutine_base::flags_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    int                 flags_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
boost::coroutines::detail::pull_coroutine_base::get	coroutine/v2/detail/pull_coroutine_base.hpp	/^    R & get() const$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:() const
boost::coroutines::detail::pull_coroutine_base::get	coroutine/v2/detail/pull_coroutine_base.hpp	/^    R get() const$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:() const
boost::coroutines::detail::pull_coroutine_base::has_result	coroutine/v2/detail/pull_coroutine_base.hpp	/^    bool has_result() const$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:() const
boost::coroutines::detail::pull_coroutine_base::ptr_t	coroutine/v2/detail/pull_coroutine_base.hpp	/^    typedef intrusive_ptr< pull_coroutine_base >     ptr_t;$/;"	t	class:boost::coroutines::detail::pull_coroutine_base	access:public
boost::coroutines::detail::pull_coroutine_base::pull	coroutine/v2/detail/pull_coroutine_base.hpp	/^    void pull()$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:()
boost::coroutines::detail::pull_coroutine_base::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu)
boost::coroutines::detail::pull_coroutine_base::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu, optional< R * > const& result)
boost::coroutines::detail::pull_coroutine_base::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu, optional< R > const& result)
boost::coroutines::detail::pull_coroutine_base::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context::ctx_fn fn,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context::ctx_fn fn, stack_context * stack_ctx, bool unwind, bool preserve_fpu)
boost::coroutines::detail::pull_coroutine_base::result_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    optional< R * >     result_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
boost::coroutines::detail::pull_coroutine_base::result_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    optional< R >       result_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
boost::coroutines::detail::pull_coroutine_base::use_count_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    unsigned int        use_count_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:private
boost::coroutines::detail::pull_coroutine_base::~pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    virtual ~pull_coroutine_base()$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:()
boost::coroutines::detail::pull_coroutine_caller	coroutine/v2/detail/pull_coroutine_caller.hpp	/^class pull_coroutine_caller : public  pull_coroutine_base< R >$/;"	c	namespace:boost::coroutines::detail	inherits:pull_coroutine_base
boost::coroutines::detail::pull_coroutine_caller	coroutine/v2/detail/pull_coroutine_caller.hpp	/^class pull_coroutine_caller< R &, Allocator > : public  pull_coroutine_base< R & >$/;"	c	namespace:boost::coroutines::detail	inherits:pull_coroutine_base
boost::coroutines::detail::pull_coroutine_caller	coroutine/v2/detail/pull_coroutine_caller.hpp	/^class pull_coroutine_caller< void, Allocator > : public  pull_coroutine_base< void >$/;"	c	namespace:boost::coroutines::detail	inherits:pull_coroutine_base
boost::coroutines::detail::pull_coroutine_caller::alloc_	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( alloc)
boost::coroutines::detail::pull_coroutine_caller::alloc_	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    allocator_t   alloc_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_caller	access:private
boost::coroutines::detail::pull_coroutine_caller::allocator_t	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    >::other   allocator_t;$/;"	t	class:boost::coroutines::detail::pull_coroutine_caller	access:public
boost::coroutines::detail::pull_coroutine_caller::deallocate_object	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:()
boost::coroutines::detail::pull_coroutine_caller::destroy_	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    static void destroy_( allocator_t & alloc, pull_coroutine_caller * p)$/;"	f	class:boost::coroutines::detail::pull_coroutine_caller	access:private	signature:( allocator_t & alloc, pull_coroutine_caller * p)
boost::coroutines::detail::pull_coroutine_caller::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        pull_coroutine_base< R & >( callee, unwind, preserve_fpu, data),$/;"	p	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu, data)
boost::coroutines::detail::pull_coroutine_caller::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        pull_coroutine_base< R >( callee, unwind, preserve_fpu, data),$/;"	p	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu, data)
boost::coroutines::detail::pull_coroutine_caller::pull_coroutine_base	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        pull_coroutine_base< void >( callee, unwind, preserve_fpu),$/;"	p	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu)
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object : private stack_tuple< StackAllocator >,$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R &, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R &, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R &, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< void, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< void, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< void, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
boost::coroutines::detail::pull_coroutine_object::alloc_	coroutine/v2/detail/pull_coroutine_object.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( alloc)
boost::coroutines::detail::pull_coroutine_object::alloc_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    allocator_t             alloc_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:private
boost::coroutines::detail::pull_coroutine_object::allocator_t	coroutine/v2/detail/pull_coroutine_object.hpp	/^    >::other                                            allocator_t;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:public
boost::coroutines::detail::pull_coroutine_object::attr	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:public
boost::coroutines::detail::pull_coroutine_object::base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^        base_type($/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( trampoline1< pull_coroutine_object >, & this->stack_ctx, stack_unwind == attr.do_unwind, fpu_preserved == attr.preserve_fpu)
boost::coroutines::detail::pull_coroutine_object::base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef pull_coroutine_base< R & >                  base_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
boost::coroutines::detail::pull_coroutine_object::base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef pull_coroutine_base< R >                    base_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
boost::coroutines::detail::pull_coroutine_object::base_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef pull_coroutine_base< void >                 base_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
boost::coroutines::detail::pull_coroutine_object::deallocate_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:()
boost::coroutines::detail::pull_coroutine_object::destroy_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    static void destroy_( allocator_t & alloc, pull_coroutine_object * p)$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:( allocator_t & alloc, pull_coroutine_object * p)
boost::coroutines::detail::pull_coroutine_object::enter_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    void enter_()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:()
boost::coroutines::detail::pull_coroutine_object::fn	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:public
boost::coroutines::detail::pull_coroutine_object::fn_	coroutine/v2/detail/pull_coroutine_object.hpp	/^        fn_( fn),$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( fn)
boost::coroutines::detail::pull_coroutine_object::fn_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    Fn                      fn_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:private
boost::coroutines::detail::pull_coroutine_object::operator =	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object & operator=( pull_coroutine_object const&);$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:( pull_coroutine_object const&)
boost::coroutines::detail::pull_coroutine_object::pbase_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^        pbase_type( stack_alloc, attr.size),$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( stack_alloc, attr.size)
boost::coroutines::detail::pull_coroutine_object::pbase_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef stack_tuple< StackAllocator >               pbase_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
boost::coroutines::detail::pull_coroutine_object::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( Fn && fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( Fn && fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::pull_coroutine_object::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::pull_coroutine_object::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( const reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( const reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::pull_coroutine_object::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( const reference_wrapper< Fn > fn,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( const reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::pull_coroutine_object::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( pull_coroutine_object &);$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:( pull_coroutine_object &)
boost::coroutines::detail::pull_coroutine_object::pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::pull_coroutine_object::run	coroutine/v2/detail/pull_coroutine_object.hpp	/^    void run()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:()
boost::coroutines::detail::pull_coroutine_object::stack_alloc	coroutine/v2/detail/pull_coroutine_object.hpp	/^                           StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:public
boost::coroutines::detail::pull_coroutine_object::~pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    ~pull_coroutine_object()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:()
boost::coroutines::detail::push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^class push_coroutine_base : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
boost::coroutines::detail::push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^class push_coroutine_base< Arg & > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
boost::coroutines::detail::push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^class push_coroutine_base< void > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
boost::coroutines::detail::push_coroutine_base::callee_	coroutine/v2/detail/push_coroutine_base.hpp	/^    coroutine_context   callee_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
boost::coroutines::detail::push_coroutine_base::caller_	coroutine/v2/detail/push_coroutine_base.hpp	/^    coroutine_context   caller_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
boost::coroutines::detail::push_coroutine_base::deallocate_object	coroutine/v2/detail/push_coroutine_base.hpp	/^    virtual void deallocate_object() = 0;$/;"	p	class:boost::coroutines::detail::push_coroutine_base	access:protected	signature:()
boost::coroutines::detail::push_coroutine_base::except_	coroutine/v2/detail/push_coroutine_base.hpp	/^    exception_ptr       except_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
boost::coroutines::detail::push_coroutine_base::flags_	coroutine/v2/detail/push_coroutine_base.hpp	/^    int                 flags_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
boost::coroutines::detail::push_coroutine_base::ptr_t	coroutine/v2/detail/push_coroutine_base.hpp	/^    typedef intrusive_ptr< push_coroutine_base >     ptr_t;$/;"	t	class:boost::coroutines::detail::push_coroutine_base	access:public
boost::coroutines::detail::push_coroutine_base::push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push( Arg & arg)$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( Arg & arg)
boost::coroutines::detail::push_coroutine_base::push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push( Arg && arg)$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( Arg && arg)
boost::coroutines::detail::push_coroutine_base::push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push( Arg const& arg)$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( Arg const& arg)
boost::coroutines::detail::push_coroutine_base::push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push()$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:()
boost::coroutines::detail::push_coroutine_base::push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^    push_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu)
boost::coroutines::detail::push_coroutine_base::push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^    push_coroutine_base( coroutine_context::ctx_fn fn,$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( coroutine_context::ctx_fn fn, stack_context * stack_ctx, bool unwind, bool preserve_fpu)
boost::coroutines::detail::push_coroutine_base::use_count_	coroutine/v2/detail/push_coroutine_base.hpp	/^    unsigned int        use_count_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:private
boost::coroutines::detail::push_coroutine_base::~push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^    virtual ~push_coroutine_base()$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:()
boost::coroutines::detail::push_coroutine_caller	coroutine/v2/detail/push_coroutine_caller.hpp	/^class push_coroutine_caller : public  push_coroutine_base< Arg >$/;"	c	namespace:boost::coroutines::detail	inherits:push_coroutine_base
boost::coroutines::detail::push_coroutine_caller::alloc_	coroutine/v2/detail/push_coroutine_caller.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::push_coroutine_caller	access:public	signature:( alloc)
boost::coroutines::detail::push_coroutine_caller::alloc_	coroutine/v2/detail/push_coroutine_caller.hpp	/^    allocator_t   alloc_;$/;"	m	class:boost::coroutines::detail::push_coroutine_caller	access:private
boost::coroutines::detail::push_coroutine_caller::allocator_t	coroutine/v2/detail/push_coroutine_caller.hpp	/^    >::other   allocator_t;$/;"	t	class:boost::coroutines::detail::push_coroutine_caller	access:public
boost::coroutines::detail::push_coroutine_caller::deallocate_object	coroutine/v2/detail/push_coroutine_caller.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::push_coroutine_caller	access:public	signature:()
boost::coroutines::detail::push_coroutine_caller::destroy_	coroutine/v2/detail/push_coroutine_caller.hpp	/^    static void destroy_( allocator_t & alloc, push_coroutine_caller * p)$/;"	f	class:boost::coroutines::detail::push_coroutine_caller	access:private	signature:( allocator_t & alloc, push_coroutine_caller * p)
boost::coroutines::detail::push_coroutine_caller::push_coroutine_base	coroutine/v2/detail/push_coroutine_caller.hpp	/^        push_coroutine_base< Arg >( callee, unwind, preserve_fpu),$/;"	p	class:boost::coroutines::detail::push_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu)
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object : private stack_tuple< StackAllocator >,$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg &, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg &, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg &, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< void, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< void, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< void, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
boost::coroutines::detail::push_coroutine_object::alloc_	coroutine/v2/detail/push_coroutine_object.hpp	/^        alloc_( alloc)$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( alloc)
boost::coroutines::detail::push_coroutine_object::alloc_	coroutine/v2/detail/push_coroutine_object.hpp	/^    allocator_t             alloc_;$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::allocator_t	coroutine/v2/detail/push_coroutine_object.hpp	/^    >::other                                            allocator_t;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:public
boost::coroutines::detail::push_coroutine_object::attr	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
boost::coroutines::detail::push_coroutine_object::base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^        base_type($/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( trampoline1< push_coroutine_object >, & this->stack_ctx, stack_unwind == attr.do_unwind, fpu_preserved == attr.preserve_fpu)
boost::coroutines::detail::push_coroutine_object::base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< Arg & >                 base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< Arg & >                base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< Arg >                  base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::base_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef push_coroutine_base< void >                 base_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::deallocate_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:()
boost::coroutines::detail::push_coroutine_object::destroy_	coroutine/v2/detail/push_coroutine_object.hpp	/^    static void destroy_( allocator_t & alloc, push_coroutine_object * p)$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:( allocator_t & alloc, push_coroutine_object * p)
boost::coroutines::detail::push_coroutine_object::enter_	coroutine/v2/detail/push_coroutine_object.hpp	/^    void enter_()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:()
boost::coroutines::detail::push_coroutine_object::fn	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
boost::coroutines::detail::push_coroutine_object::fn_	coroutine/v2/detail/push_coroutine_object.hpp	/^        fn_( fn),$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( fn)
boost::coroutines::detail::push_coroutine_object::fn_	coroutine/v2/detail/push_coroutine_object.hpp	/^    Fn                      fn_;$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::operator =	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object & operator=( push_coroutine_object const&);$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:( push_coroutine_object const&)
boost::coroutines::detail::push_coroutine_object::pbase_type	coroutine/v2/detail/push_coroutine_object.hpp	/^        pbase_type( stack_alloc, attr.size),$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( stack_alloc, attr.size)
boost::coroutines::detail::push_coroutine_object::pbase_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef stack_tuple< StackAllocator >               pbase_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
boost::coroutines::detail::push_coroutine_object::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( Fn && fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( Fn && fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::push_coroutine_object::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::push_coroutine_object::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( const reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( const reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::push_coroutine_object::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( push_coroutine_object &);$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:( push_coroutine_object &)
boost::coroutines::detail::push_coroutine_object::push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
boost::coroutines::detail::push_coroutine_object::run	coroutine/v2/detail/push_coroutine_object.hpp	/^    void run()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:()
boost::coroutines::detail::push_coroutine_object::stack_alloc	coroutine/v2/detail/push_coroutine_object.hpp	/^                           StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
boost::coroutines::detail::push_coroutine_object::stack_alloc	coroutine/v2/detail/push_coroutine_object.hpp	/^                      StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
boost::coroutines::detail::push_coroutine_object::~push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    ~push_coroutine_object()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:()
boost::coroutines::detail::segmented_stack_allocator	coroutine/detail/segmented_stack_allocator.hpp	/^class BOOST_COROUTINES_DECL segmented_stack_allocator$/;"	c	namespace:boost::coroutines::detail
boost::coroutines::detail::segmented_stack_allocator::allocate	coroutine/detail/segmented_stack_allocator.hpp	/^    void allocate( stack_context &, std::size_t = minimum_stacksize() );$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:( stack_context &, std::size_t = minimum_stacksize() )
boost::coroutines::detail::segmented_stack_allocator::deallocate	coroutine/detail/segmented_stack_allocator.hpp	/^    void deallocate( stack_context &);$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:( stack_context &)
boost::coroutines::detail::segmented_stack_allocator::default_stacksize	coroutine/detail/segmented_stack_allocator.hpp	/^    static std::size_t default_stacksize();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
boost::coroutines::detail::segmented_stack_allocator::is_stack_unbound	coroutine/detail/segmented_stack_allocator.hpp	/^    static bool is_stack_unbound();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
boost::coroutines::detail::segmented_stack_allocator::maximum_stacksize	coroutine/detail/segmented_stack_allocator.hpp	/^    static std::size_t maximum_stacksize();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
boost::coroutines::detail::segmented_stack_allocator::minimum_stacksize	coroutine/detail/segmented_stack_allocator.hpp	/^    static std::size_t minimum_stacksize();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
boost::coroutines::detail::stack_tuple	coroutine/detail/stack_tuple.hpp	/^struct stack_tuple$/;"	s	namespace:boost::coroutines::detail
boost::coroutines::detail::stack_tuple::stack_alloc	coroutine/detail/stack_tuple.hpp	/^    StackAllocator              stack_alloc;$/;"	m	struct:boost::coroutines::detail::stack_tuple	access:public
boost::coroutines::detail::stack_tuple::stack_ctx	coroutine/detail/stack_tuple.hpp	/^    coroutines::stack_context   stack_ctx;$/;"	m	struct:boost::coroutines::detail::stack_tuple	access:public
boost::coroutines::detail::stack_tuple::stack_tuple	coroutine/detail/stack_tuple.hpp	/^    stack_tuple( StackAllocator const& stack_alloc_, std::size_t size) :$/;"	f	struct:boost::coroutines::detail::stack_tuple	access:public	signature:( StackAllocator const& stack_alloc_, std::size_t size)
boost::coroutines::detail::stack_tuple::~stack_tuple	coroutine/detail/stack_tuple.hpp	/^    ~stack_tuple()$/;"	f	struct:boost::coroutines::detail::stack_tuple	access:public	signature:()
boost::coroutines::detail::standard_stack_allocator	coroutine/detail/standard_stack_allocator.hpp	/^class BOOST_COROUTINES_DECL standard_stack_allocator$/;"	c	namespace:boost::coroutines::detail
boost::coroutines::detail::standard_stack_allocator::allocate	coroutine/detail/standard_stack_allocator.hpp	/^    void allocate( stack_context &, std::size_t);$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:( stack_context &, std::size_t)
boost::coroutines::detail::standard_stack_allocator::deallocate	coroutine/detail/standard_stack_allocator.hpp	/^    void deallocate( stack_context &);$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:( stack_context &)
boost::coroutines::detail::standard_stack_allocator::default_stacksize	coroutine/detail/standard_stack_allocator.hpp	/^    static std::size_t default_stacksize();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
boost::coroutines::detail::standard_stack_allocator::is_stack_unbound	coroutine/detail/standard_stack_allocator.hpp	/^    static bool is_stack_unbound();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
boost::coroutines::detail::standard_stack_allocator::maximum_stacksize	coroutine/detail/standard_stack_allocator.hpp	/^    static std::size_t maximum_stacksize();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
boost::coroutines::detail::standard_stack_allocator::minimum_stacksize	coroutine/detail/standard_stack_allocator.hpp	/^    static std::size_t minimum_stacksize();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
boost::coroutines::detail::trampoline1	coroutine/detail/trampoline.hpp	/^void trampoline1( intptr_t vp)$/;"	f	namespace:boost::coroutines::detail	signature:( intptr_t vp)
boost::coroutines::detail::trampoline2	coroutine/detail/trampoline.hpp	/^void trampoline2( intptr_t vp)$/;"	f	namespace:boost::coroutines::detail	signature:( intptr_t vp)
boost::coroutines::end	coroutine/v1/coroutine.hpp	/^end( coroutine< Signature > & c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > & c)
boost::coroutines::end	coroutine/v1/coroutine.hpp	/^end( coroutine< Signature > const& c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const& c)
boost::coroutines::flag_fpu_t	coroutine/flags.hpp	/^enum flag_fpu_t$/;"	g	namespace:boost::coroutines
boost::coroutines::flag_unwind_t	coroutine/flags.hpp	/^enum flag_unwind_t$/;"	g	namespace:boost::coroutines
boost::coroutines::fn	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
boost::coroutines::fn	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
boost::coroutines::fn	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
boost::coroutines::fpu_not_preserved	coroutine/flags.hpp	/^    fpu_not_preserved$/;"	e	enum:boost::coroutines::flag_fpu_t
boost::coroutines::fpu_preserved	coroutine/flags.hpp	/^    fpu_preserved = 0,$/;"	e	enum:boost::coroutines::flag_fpu_t
boost::coroutines::impl_	coroutine/v2/coroutine.hpp	/^    impl_()$/;"	f	namespace:boost::coroutines	signature:()
boost::coroutines::invalid_result	coroutine/exceptions.hpp	/^class invalid_result : public coroutine_error$/;"	c	namespace:boost::coroutines	inherits:coroutine_error
boost::coroutines::invalid_result::invalid_result	coroutine/exceptions.hpp	/^    invalid_result() :$/;"	f	class:boost::coroutines::invalid_result	access:public	signature:()
boost::coroutines::no_stack_unwind	coroutine/flags.hpp	/^    no_stack_unwind$/;"	e	enum:boost::coroutines::flag_unwind_t
boost::coroutines::pull_coroutine	coroutine/v2/coroutine.hpp	/^class pull_coroutine$/;"	c	namespace:boost::coroutines
boost::coroutines::pull_coroutine	coroutine/v2/coroutine.hpp	/^class pull_coroutine< R & >$/;"	c	namespace:boost::coroutines
boost::coroutines::pull_coroutine	coroutine/v2/coroutine.hpp	/^class pull_coroutine< void >$/;"	c	namespace:boost::coroutines
boost::coroutines::pull_coroutine::attr	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::pull_coroutine	access:public
boost::coroutines::pull_coroutine::base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::pull_coroutine_base< R & >  base_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::pull_coroutine_base< R >    base_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::pull_coroutine_base< void > base_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::const_iterator	coroutine/v2/coroutine.hpp	/^    class const_iterator : public std::iterator< std::input_iterator_tag, R >$/;"	c	class:boost::coroutines::pull_coroutine	inherits:std::iterator	access:public
boost::coroutines::pull_coroutine::const_iterator	coroutine/v2/coroutine.hpp	/^    class const_iterator : public std::iterator< std::input_iterator_tag, const typename remove_reference< R >::type >$/;"	c	class:boost::coroutines::pull_coroutine	inherits:std::iterator	access:public
boost::coroutines::pull_coroutine::const_iterator::c_	coroutine/v2/coroutine.hpp	/^        pull_coroutine< R & >   *   c_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
boost::coroutines::pull_coroutine::const_iterator::c_	coroutine/v2/coroutine.hpp	/^        pull_coroutine< R > *   c_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
boost::coroutines::pull_coroutine::const_iterator::const_iterator	coroutine/v2/coroutine.hpp	/^        const_iterator( const_iterator const& other) :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::pull_coroutine::const_iterator::const_iterator	coroutine/v2/coroutine.hpp	/^        const_iterator() :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:()
boost::coroutines::pull_coroutine::const_iterator::const_iterator	coroutine/v2/coroutine.hpp	/^        explicit const_iterator( pull_coroutine< R & > const* c) :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( pull_coroutine< R & > const* c)
boost::coroutines::pull_coroutine::const_iterator::const_iterator	coroutine/v2/coroutine.hpp	/^        explicit const_iterator( pull_coroutine< R > const* c) :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( pull_coroutine< R > const* c)
boost::coroutines::pull_coroutine::const_iterator::fetch_	coroutine/v2/coroutine.hpp	/^        void fetch_()$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:private	signature:()
boost::coroutines::pull_coroutine::const_iterator::increment_	coroutine/v2/coroutine.hpp	/^        void increment_()$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:private	signature:()
boost::coroutines::pull_coroutine::const_iterator::operator !=	coroutine/v2/coroutine.hpp	/^        bool operator!=( const_iterator const& other)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::pull_coroutine::const_iterator::operator *	coroutine/v2/coroutine.hpp	/^        reference_t operator*() const$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:() const
boost::coroutines::pull_coroutine::const_iterator::operator ++	coroutine/v2/coroutine.hpp	/^        const_iterator & operator++()$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:()
boost::coroutines::pull_coroutine::const_iterator::operator ++	coroutine/v2/coroutine.hpp	/^        const_iterator operator++( int)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( int)
boost::coroutines::pull_coroutine::const_iterator::operator ->	coroutine/v2/coroutine.hpp	/^        pointer_t operator->() const$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:() const
boost::coroutines::pull_coroutine::const_iterator::operator =	coroutine/v2/coroutine.hpp	/^        const_iterator & operator=( const_iterator const& other)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::pull_coroutine::const_iterator::operator ==	coroutine/v2/coroutine.hpp	/^        bool operator==( const_iterator const& other)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
boost::coroutines::pull_coroutine::const_iterator::pointer_t	coroutine/v2/coroutine.hpp	/^        typedef typename const_iterator::pointer      pointer_t;$/;"	t	class:boost::coroutines::pull_coroutine::const_iterator	access:public
boost::coroutines::pull_coroutine::const_iterator::reference_t	coroutine/v2/coroutine.hpp	/^        typedef typename const_iterator::reference    reference_t;$/;"	t	class:boost::coroutines::pull_coroutine::const_iterator	access:public
boost::coroutines::pull_coroutine::const_iterator::val_	coroutine/v2/coroutine.hpp	/^        optional< R & >             val_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
boost::coroutines::pull_coroutine::const_iterator::val_	coroutine/v2/coroutine.hpp	/^        optional< R >           val_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
boost::coroutines::pull_coroutine::coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( push_coroutine< R & > &);$/;"	t	class:boost::coroutines::pull_coroutine	access:public
boost::coroutines::pull_coroutine::coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( push_coroutine< R > &);$/;"	t	class:boost::coroutines::pull_coroutine	access:public
boost::coroutines::pull_coroutine::coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( push_coroutine< void > &);$/;"	t	class:boost::coroutines::pull_coroutine	access:public
boost::coroutines::pull_coroutine::disable_if::type	coroutine/v2/coroutine.hpp	/^               >::type = 0) :$/;"	m	class:boost::coroutines::pull_coroutine::disable_if	access:public
boost::coroutines::pull_coroutine::dummy	coroutine/v2/coroutine.hpp	/^    struct dummy$/;"	s	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::dummy::nonnull	coroutine/v2/coroutine.hpp	/^    { void nonnull() {} };$/;"	f	struct:boost::coroutines::pull_coroutine::dummy	access:public	signature:()
boost::coroutines::pull_coroutine::fn	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::pull_coroutine	access:public
boost::coroutines::pull_coroutine::impl_	coroutine/v2/coroutine.hpp	/^        impl_()$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:()
boost::coroutines::pull_coroutine::impl_	coroutine/v2/coroutine.hpp	/^    ptr_t  impl_;$/;"	m	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::ptr_t	coroutine/v2/coroutine.hpp	/^    typedef base_t::ptr_t                       ptr_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::ptr_t	coroutine/v2/coroutine.hpp	/^    typedef typename base_t::ptr_t              ptr_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    pull_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::pull_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    pull_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::pull_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc, optional< R * > const& result)
boost::coroutines::pull_coroutine::pull_coroutine	coroutine/v2/coroutine.hpp	/^    pull_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::pull_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc, optional< R > const& result)
boost::coroutines::pull_coroutine::safe_bool	coroutine/v2/coroutine.hpp	/^    typedef void ( dummy::*safe_bool)();$/;"	t	class:boost::coroutines::pull_coroutine	access:private
boost::coroutines::pull_coroutine::stack_alloc	coroutine/v2/coroutine.hpp	/^               stack_allocator const& stack_alloc =$/;"	m	class:boost::coroutines::pull_coroutine	access:public
boost::coroutines::pull_coroutine::std::alloc	coroutine/v2/coroutine.hpp	/^               std::allocator< pull_coroutine > const& alloc =$/;"	m	class:boost::coroutines::pull_coroutine::std	access:public
boost::coroutines::push_coroutine	coroutine/v2/coroutine.hpp	/^class push_coroutine$/;"	c	namespace:boost::coroutines
boost::coroutines::push_coroutine	coroutine/v2/coroutine.hpp	/^class push_coroutine< Arg & >$/;"	c	namespace:boost::coroutines
boost::coroutines::push_coroutine	coroutine/v2/coroutine.hpp	/^class push_coroutine< void >$/;"	c	namespace:boost::coroutines
boost::coroutines::push_coroutine::alloc	coroutine/v2/coroutine.hpp	/^               Allocator const& alloc,$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::attr	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::attr	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::push_coroutine_base< Arg & >    base_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::push_coroutine_base< Arg >  base_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::base_t	coroutine/v2/coroutine.hpp	/^    typedef detail::push_coroutine_base< void >  base_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( pull_coroutine< Arg & > &);$/;"	t	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( pull_coroutine< Arg > &);$/;"	t	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( pull_coroutine< void > &);$/;"	t	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::disable_if::type	coroutine/v2/coroutine.hpp	/^               >::type = 0);$/;"	m	class:boost::coroutines::push_coroutine::disable_if	access:public
boost::coroutines::push_coroutine::dummy	coroutine/v2/coroutine.hpp	/^    struct dummy$/;"	s	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::dummy::nonnull	coroutine/v2/coroutine.hpp	/^    { void nonnull() {} };$/;"	f	struct:boost::coroutines::push_coroutine::dummy	access:public	signature:()
boost::coroutines::push_coroutine::fn	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::fn	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::impl_	coroutine/v2/coroutine.hpp	/^        impl_()$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:()
boost::coroutines::push_coroutine::impl_	coroutine/v2/coroutine.hpp	/^    ptr_t  impl_;$/;"	m	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::iterator	coroutine/v2/coroutine.hpp	/^    class iterator : public std::iterator< std::output_iterator_tag, void, void, void, void >$/;"	c	class:boost::coroutines::push_coroutine	inherits:std::iterator	access:public
boost::coroutines::push_coroutine::iterator::c_	coroutine/v2/coroutine.hpp	/^       push_coroutine< Arg & >    *   c_;$/;"	m	class:boost::coroutines::push_coroutine::iterator	access:private
boost::coroutines::push_coroutine::iterator::c_	coroutine/v2/coroutine.hpp	/^       push_coroutine< Arg >    *   c_;$/;"	m	class:boost::coroutines::push_coroutine::iterator	access:private
boost::coroutines::push_coroutine::iterator::iterator	coroutine/v2/coroutine.hpp	/^        explicit iterator( push_coroutine< Arg & > * c) :$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( push_coroutine< Arg & > * c)
boost::coroutines::push_coroutine::iterator::iterator	coroutine/v2/coroutine.hpp	/^        explicit iterator( push_coroutine< Arg > * c) :$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( push_coroutine< Arg > * c)
boost::coroutines::push_coroutine::iterator::iterator	coroutine/v2/coroutine.hpp	/^        iterator() :$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:()
boost::coroutines::push_coroutine::iterator::operator !=	coroutine/v2/coroutine.hpp	/^        bool operator!=( iterator const& other)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( iterator const& other)
boost::coroutines::push_coroutine::iterator::operator *	coroutine/v2/coroutine.hpp	/^        iterator & operator*()$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:()
boost::coroutines::push_coroutine::iterator::operator ++	coroutine/v2/coroutine.hpp	/^        iterator & operator++()$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:()
boost::coroutines::push_coroutine::iterator::operator =	coroutine/v2/coroutine.hpp	/^        iterator & operator=( Arg & a)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( Arg & a)
boost::coroutines::push_coroutine::iterator::operator =	coroutine/v2/coroutine.hpp	/^        iterator & operator=( Arg a)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( Arg a)
boost::coroutines::push_coroutine::iterator::operator ==	coroutine/v2/coroutine.hpp	/^        bool operator==( iterator const& other)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( iterator const& other)
boost::coroutines::push_coroutine::operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()( Arg & arg)$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:( Arg & arg)
boost::coroutines::push_coroutine::operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()( Arg && arg) {$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:( Arg && arg)
boost::coroutines::push_coroutine::operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()( Arg const& arg)$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:( Arg const& arg)
boost::coroutines::push_coroutine::operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()()$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:()
boost::coroutines::push_coroutine::ptr_t	coroutine/v2/coroutine.hpp	/^    typedef base_t::ptr_t                        ptr_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::ptr_t	coroutine/v2/coroutine.hpp	/^    typedef typename base_t::ptr_t                  ptr_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::ptr_t	coroutine/v2/coroutine.hpp	/^    typedef typename base_t::ptr_t              ptr_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( Fn fn, attributes const& attr = attributes(),$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( Fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( Fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( Fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine(coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:(coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^    push_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::push_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
boost::coroutines::push_coroutine::safe_bool	coroutine/v2/coroutine.hpp	/^    typedef void ( dummy::*safe_bool)();$/;"	t	class:boost::coroutines::push_coroutine	access:private
boost::coroutines::push_coroutine::stack_alloc	coroutine/v2/coroutine.hpp	/^               StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::stack_alloc	coroutine/v2/coroutine.hpp	/^               stack_allocator const& stack_alloc =$/;"	m	class:boost::coroutines::push_coroutine	access:public
boost::coroutines::push_coroutine::std::alloc	coroutine/v2/coroutine.hpp	/^               std::allocator< push_coroutine > const& alloc =$/;"	m	class:boost::coroutines::push_coroutine::std	access:public
boost::coroutines::range_begin	coroutine/v1/coroutine.hpp	/^range_begin( coroutine< Signature > & c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > & c)
boost::coroutines::range_begin	coroutine/v1/coroutine.hpp	/^range_begin( coroutine< Signature > const& c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const& c)
boost::coroutines::range_begin	coroutine/v2/coroutine.hpp	/^range_begin( pull_coroutine< R > & c)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > & c)
boost::coroutines::range_begin	coroutine/v2/coroutine.hpp	/^range_begin( pull_coroutine< R > const& c)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > const& c)
boost::coroutines::range_begin	coroutine/v2/coroutine.hpp	/^range_begin( push_coroutine< Arg > & c)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > & c)
boost::coroutines::range_begin	coroutine/v2/coroutine.hpp	/^range_begin( push_coroutine< Arg > const& c)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > const& c)
boost::coroutines::range_end	coroutine/v1/coroutine.hpp	/^range_end( coroutine< Signature > &)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > &)
boost::coroutines::range_end	coroutine/v1/coroutine.hpp	/^range_end( coroutine< Signature > const&)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const&)
boost::coroutines::range_end	coroutine/v2/coroutine.hpp	/^range_end( pull_coroutine< R > &)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > &)
boost::coroutines::range_end	coroutine/v2/coroutine.hpp	/^range_end( pull_coroutine< R > const&)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > const&)
boost::coroutines::range_end	coroutine/v2/coroutine.hpp	/^range_end( push_coroutine< Arg > &)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > &)
boost::coroutines::range_end	coroutine/v2/coroutine.hpp	/^range_end( push_coroutine< Arg > const&)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > const&)
boost::coroutines::stack_alloc	coroutine/v2/coroutine.hpp	/^           StackAllocator const& stack_alloc,$/;"	m	namespace:boost::coroutines
boost::coroutines::stack_alloc	coroutine/v2/coroutine.hpp	/^           stack_allocator const& stack_alloc,$/;"	m	namespace:boost::coroutines
boost::coroutines::stack_allocator	coroutine/stack_allocator.hpp	/^typedef detail::segmented_stack_allocator   stack_allocator;$/;"	t	namespace:boost::coroutines
boost::coroutines::stack_context	coroutine/stack_context.hpp	/^struct stack_context$/;"	s	namespace:boost::coroutines
boost::coroutines::stack_context::segments_context	coroutine/stack_context.hpp	/^    typedef void *  segments_context[BOOST_COROUTINES_SEGMENTS];$/;"	t	struct:boost::coroutines::stack_context	access:public
boost::coroutines::stack_context::segments_ctx	coroutine/stack_context.hpp	/^    segments_context        segments_ctx;$/;"	m	struct:boost::coroutines::stack_context	access:public
boost::coroutines::stack_context::size	coroutine/stack_context.hpp	/^    std::size_t             size;$/;"	m	struct:boost::coroutines::stack_context	access:public
boost::coroutines::stack_context::sp	coroutine/stack_context.hpp	/^    void                *   sp;$/;"	m	struct:boost::coroutines::stack_context	access:public
boost::coroutines::stack_context::stack_context	coroutine/stack_context.hpp	/^    stack_context() :$/;"	f	struct:boost::coroutines::stack_context	access:public	signature:()
boost::coroutines::stack_unwind	coroutine/flags.hpp	/^    stack_unwind = 0,$/;"	e	enum:boost::coroutines::flag_unwind_t
boost::coroutines::std::alloc	coroutine/v2/coroutine.hpp	/^           std::allocator< push_coroutine > const& alloc,$/;"	m	class:boost::coroutines::std
boost::range_const_iterator	coroutine/v1/coroutine.hpp	/^struct range_const_iterator< coroutines::coroutine< Signature > >$/;"	s	namespace:boost
boost::range_const_iterator	coroutine/v2/coroutine.hpp	/^struct range_const_iterator< coroutines::pull_coroutine< R > >$/;"	s	namespace:boost
boost::range_const_iterator	coroutine/v2/coroutine.hpp	/^struct range_const_iterator< coroutines::push_coroutine< Arg > >$/;"	s	namespace:boost
boost::range_const_iterator::type	coroutine/v1/coroutine.hpp	/^{ typedef typename coroutines::coroutine< Signature >::const_iterator type; };$/;"	t	struct:boost::range_const_iterator	access:public
boost::range_const_iterator::type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::pull_coroutine< R >::const_iterator type; };$/;"	t	struct:boost::range_const_iterator	access:public
boost::range_const_iterator::type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::push_coroutine< Arg >::const_iterator type; };$/;"	t	struct:boost::range_const_iterator	access:public
boost::range_mutable_iterator	coroutine/v1/coroutine.hpp	/^struct range_mutable_iterator< coroutines::coroutine< Signature > >$/;"	s	namespace:boost
boost::range_mutable_iterator	coroutine/v2/coroutine.hpp	/^struct range_mutable_iterator< coroutines::pull_coroutine< R > >$/;"	s	namespace:boost
boost::range_mutable_iterator	coroutine/v2/coroutine.hpp	/^struct range_mutable_iterator< coroutines::push_coroutine< Arg > >$/;"	s	namespace:boost
boost::range_mutable_iterator::type	coroutine/v1/coroutine.hpp	/^{ typedef typename coroutines::coroutine< Signature >::iterator type; };$/;"	t	struct:boost::range_mutable_iterator	access:public
boost::range_mutable_iterator::type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::pull_coroutine< R >::iterator type; };$/;"	t	struct:boost::range_mutable_iterator	access:public
boost::range_mutable_iterator::type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::push_coroutine< Arg >::iterator type; };$/;"	t	struct:boost::range_mutable_iterator	access:public
boost::system	coroutine/exceptions.hpp	/^namespace system {$/;"	n	namespace:boost
boost::system::is_error_code_enum	coroutine/exceptions.hpp	/^struct is_error_code_enum< coroutines::coroutine_errc > : public true_type$/;"	s	namespace:boost::system	inherits:true_type
boost::system::is_error_code_enum	coroutine/exceptions.hpp	/^struct is_error_code_enum< coroutines::coroutine_errc::enum_type > : public true_type$/;"	s	namespace:boost::system	inherits:true_type
boost::system::make_error_code	coroutine/exceptions.hpp	/^error_code make_error_code( coroutines::coroutine_errc e) \/\/BOOST_NOEXCEPT$/;"	f	namespace:boost::system	signature:( coroutines::coroutine_errc e)
boost::system::make_error_condition	coroutine/exceptions.hpp	/^error_condition make_error_condition( coroutines::coroutine_errc e) \/\/BOOST_NOEXCEPT$/;"	f	namespace:boost::system	signature:( coroutines::coroutine_errc e)
c_	coroutine/v2/coroutine.hpp	/^        pull_coroutine< R & >   *   c_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
c_	coroutine/v2/coroutine.hpp	/^        pull_coroutine< R > *   c_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
c_	coroutine/v2/coroutine.hpp	/^       push_coroutine< Arg & >    *   c_;$/;"	m	class:boost::coroutines::push_coroutine::iterator	access:private
c_	coroutine/v2/coroutine.hpp	/^       push_coroutine< Arg >    *   c_;$/;"	m	class:boost::coroutines::push_coroutine::iterator	access:private
callee_	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_context   callee_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
callee_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    coroutine_context   callee_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
callee_	coroutine/v2/detail/push_coroutine_base.hpp	/^    coroutine_context   callee_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
caller	coroutine/v1/coroutine.hpp	/^struct caller$/;"	s	namespace:boost::coroutines::detail
caller	coroutine/v1/coroutine.hpp	/^struct caller< Signature, C, Result, 0 >$/;"	s	namespace:boost::coroutines::detail
caller	coroutine/v1/coroutine.hpp	/^struct caller< Signature, C, void, 0 >$/;"	s	namespace:boost::coroutines::detail
caller	coroutine/v1/coroutine.hpp	/^struct caller< Signature, C, void, arity >$/;"	s	namespace:boost::coroutines::detail
caller_	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_context   caller_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
caller_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    coroutine_context   caller_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
caller_	coroutine/v2/detail/push_coroutine_base.hpp	/^    coroutine_context   caller_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
caller_type	coroutine/v1/coroutine.hpp	/^    >::type                                                     caller_type;$/;"	t	class:boost::coroutines::coroutine	access:public
checkpoint	coroutine/checkpoint.hpp	/^class checkpoint$/;"	c	namespace:boost::coroutines
const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator( const_iterator const& other) :$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator() :$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:()
const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^        explicit const_iterator( D const* dp) :$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( D const* dp)
const_iterator	coroutine/v1/detail/coroutine_op.hpp	/^    class const_iterator : public std::iterator< std::input_iterator_tag, const typename remove_reference< Result >::type >$/;"	c	struct:boost::coroutines::detail::coroutine_op	inherits:std::iterator	access:public
const_iterator	coroutine/v2/coroutine.hpp	/^        const_iterator( const_iterator const& other) :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
const_iterator	coroutine/v2/coroutine.hpp	/^        const_iterator() :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:()
const_iterator	coroutine/v2/coroutine.hpp	/^        explicit const_iterator( pull_coroutine< R & > const* c) :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( pull_coroutine< R & > const* c)
const_iterator	coroutine/v2/coroutine.hpp	/^        explicit const_iterator( pull_coroutine< R > const* c) :$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( pull_coroutine< R > const* c)
const_iterator	coroutine/v2/coroutine.hpp	/^    class const_iterator : public std::iterator< std::input_iterator_tag, R >$/;"	c	class:boost::coroutines::pull_coroutine	inherits:std::iterator	access:public
const_iterator	coroutine/v2/coroutine.hpp	/^    class const_iterator : public std::iterator< std::input_iterator_tag, const typename remove_reference< R >::type >$/;"	c	class:boost::coroutines::pull_coroutine	inherits:std::iterator	access:public
coroutine	coroutine/v1/coroutine.hpp	/^    coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc)
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, arguments arg, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, arguments arg, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< coroutine > const& alloc = std::allocator< coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, arguments arg, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, arguments arg, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >() )
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< coroutine > const& alloc = std::allocator< coroutine >() )
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc)
coroutine	coroutine/v1/coroutine.hpp	/^    explicit coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< coroutine > const& alloc = std::allocator< coroutine >() )
coroutine	coroutine/v1/coroutine.hpp	/^class coroutine : public detail::coroutine_op<$/;"	c	namespace:boost::coroutines	inherits:detail::coroutine_op,detail::coroutine_get
coroutine	coroutine/v1/coroutine.hpp	/^class coroutine< Signature, 0 > : public detail::coroutine_op<$/;"	c	namespace:boost::coroutines	inherits:detail::coroutine_op,detail::coroutine_get
coroutine	coroutine/v2/coroutine.hpp	/^struct coroutine$/;"	s	namespace:boost::coroutines
coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_base( coroutine_context const& callee, bool unwind, bool preserve_fpu) :$/;"	f	class:boost::coroutines::detail::coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu)
coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^    coroutine_base( coroutine_context::ctx_fn fn, stack_context * stack_ctx,$/;"	f	class:boost::coroutines::detail::coroutine_base	access:public	signature:( coroutine_context::ctx_fn fn, stack_context * stack_ctx, bool unwind, bool preserve_fpu)
coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^class coroutine_base : private noncopyable,$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable,coroutine_base_resume
coroutine_base	coroutine/v1/detail/coroutine_caller.hpp	/^        coroutine_base< Signature >( callee, unwind, preserve_fpu),$/;"	p	class:boost::coroutines::detail::coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu)
coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, Result, 0 >$/;"	c	namespace:boost::coroutines::detail
coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, Result, 1 >$/;"	c	namespace:boost::coroutines::detail
coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, void, 0 >$/;"	c	namespace:boost::coroutines::detail
coroutine_base_resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^class coroutine_base_resume< Signature, D, void, 1 >$/;"	c	namespace:boost::coroutines::detail
coroutine_caller	coroutine/v1/detail/coroutine_caller.hpp	/^class coroutine_caller : public  coroutine_base< Signature >$/;"	c	namespace:boost::coroutines::detail	inherits:coroutine_base
coroutine_context	coroutine/detail/coroutine_context.hpp	/^    coroutine_context( coroutine_context const&);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( coroutine_context const&)
coroutine_context	coroutine/detail/coroutine_context.hpp	/^    coroutine_context();$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:()
coroutine_context	coroutine/detail/coroutine_context.hpp	/^    explicit coroutine_context( ctx_fn, stack_context *);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( ctx_fn, stack_context *)
coroutine_context	coroutine/detail/coroutine_context.hpp	/^class BOOST_COROUTINES_DECL coroutine_context : private context::fcontext_t,$/;"	c	namespace:boost::coroutines::detail	inherits:context::fcontext_t,stack_context
coroutine_error	coroutine/exceptions.hpp	/^    coroutine_error( system::error_code ec) :$/;"	f	class:boost::coroutines::coroutine_error	access:public	signature:( system::error_code ec)
coroutine_error	coroutine/exceptions.hpp	/^class coroutine_error : public std::logic_error$/;"	c	namespace:boost::coroutines	inherits:std::logic_error
coroutine_fn	coroutine/v1/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( caller_type &);$/;"	t	class:boost::coroutines::coroutine	access:public
coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( pull_coroutine< Arg & > &);$/;"	t	class:boost::coroutines::push_coroutine	access:public
coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( pull_coroutine< Arg > &);$/;"	t	class:boost::coroutines::push_coroutine	access:public
coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( pull_coroutine< void > &);$/;"	t	class:boost::coroutines::push_coroutine	access:public
coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( push_coroutine< R & > &);$/;"	t	class:boost::coroutines::pull_coroutine	access:public
coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( push_coroutine< R > &);$/;"	t	class:boost::coroutines::pull_coroutine	access:public
coroutine_fn	coroutine/v2/coroutine.hpp	/^    typedef void ( * coroutine_fn) ( push_coroutine< void > &);$/;"	t	class:boost::coroutines::pull_coroutine	access:public
coroutine_get	coroutine/v1/coroutine.hpp	/^        detail::coroutine_get<$/;"	p	class:boost::coroutines::coroutine::detail	access:public	signature:()
coroutine_get	coroutine/v1/detail/coroutine_get.hpp	/^struct coroutine_get$/;"	s	namespace:boost::coroutines::detail
coroutine_get	coroutine/v1/detail/coroutine_get.hpp	/^struct coroutine_get< D, void, arity >$/;"	s	namespace:boost::coroutines::detail
coroutine_op	coroutine/v1/coroutine.hpp	/^        detail::coroutine_op<$/;"	p	class:boost::coroutines::coroutine::detail	access:public	signature:()
coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, Result, 0 >$/;"	s	namespace:boost::coroutines::detail
coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, Result, 1 >$/;"	s	namespace:boost::coroutines::detail
coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, void, 0 >$/;"	s	namespace:boost::coroutines::detail
coroutine_op	coroutine/v1/detail/coroutine_op.hpp	/^struct coroutine_op< Signature, D, void, 1 >$/;"	s	namespace:boost::coroutines::detail
coroutines	coroutine/attributes.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/checkpoint.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/coroutine_context.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/exceptions.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/flags.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/holder.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/param.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/segmented_stack_allocator.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/stack_tuple.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/standard_stack_allocator.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/detail/trampoline.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/exceptions.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/flags.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/stack_allocator.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/stack_context.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/coroutine.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/arg.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/coroutine_base.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/coroutine_base_resume.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/coroutine_caller.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/coroutine_get.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/coroutine_object.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v1/detail/coroutine_op.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/coroutine.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/detail/pull_coroutine_base.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/detail/pull_coroutine_caller.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/detail/pull_coroutine_object.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/detail/push_coroutine_base.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/detail/push_coroutine_caller.hpp	/^namespace coroutines {$/;"	n	namespace:boost
coroutines	coroutine/v2/detail/push_coroutine_object.hpp	/^namespace coroutines {$/;"	n	namespace:boost
ctx	coroutine/detail/holder.hpp	/^    coroutine_context      *   ctx;$/;"	m	struct:boost::coroutines::detail::holder	access:public
ctx	coroutine/detail/holder.hpp	/^    coroutine_context  *   ctx;$/;"	m	struct:boost::coroutines::detail::holder	access:public
ctx_	coroutine/checkpoint.hpp	/^    context::fcontext_t ctx_;$/;"	m	class:boost::coroutines::checkpoint	access:private
ctx_	coroutine/detail/coroutine_context.hpp	/^    context::fcontext_t *   ctx_;$/;"	m	class:boost::coroutines::detail::coroutine_context	access:private
ctx_fn	coroutine/detail/coroutine_context.hpp	/^    typedef void( * ctx_fn)( intptr_t);$/;"	t	class:boost::coroutines::detail::coroutine_context	access:public
data	coroutine/detail/holder.hpp	/^    optional< Data >        data;$/;"	m	struct:boost::coroutines::detail::holder	access:public
deallocate	coroutine/detail/segmented_stack_allocator.hpp	/^    void deallocate( stack_context &);$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:( stack_context &)
deallocate	coroutine/detail/standard_stack_allocator.hpp	/^    void deallocate( stack_context &);$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:( stack_context &)
deallocate_object	coroutine/v1/detail/coroutine_base.hpp	/^    virtual void deallocate_object() = 0;$/;"	p	class:boost::coroutines::detail::coroutine_base	access:protected	signature:()
deallocate_object	coroutine/v1/detail/coroutine_caller.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::coroutine_caller	access:public	signature:()
deallocate_object	coroutine/v2/detail/pull_coroutine_base.hpp	/^    virtual void deallocate_object() = 0;$/;"	p	class:boost::coroutines::detail::pull_coroutine_base	access:protected	signature:()
deallocate_object	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:()
deallocate_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:()
deallocate_object	coroutine/v2/detail/push_coroutine_base.hpp	/^    virtual void deallocate_object() = 0;$/;"	p	class:boost::coroutines::detail::push_coroutine_base	access:protected	signature:()
deallocate_object	coroutine/v2/detail/push_coroutine_caller.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::push_coroutine_caller	access:public	signature:()
deallocate_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    void deallocate_object()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:()
default_stacksize	coroutine/detail/segmented_stack_allocator.hpp	/^    static std::size_t default_stacksize();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
default_stacksize	coroutine/detail/standard_stack_allocator.hpp	/^    static std::size_t default_stacksize();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
destroy_	coroutine/v1/detail/coroutine_caller.hpp	/^    static void destroy_( allocator_t & alloc, coroutine_caller * p)$/;"	f	class:boost::coroutines::detail::coroutine_caller	access:private	signature:( allocator_t & alloc, coroutine_caller * p)
destroy_	coroutine/v2/detail/pull_coroutine_caller.hpp	/^    static void destroy_( allocator_t & alloc, pull_coroutine_caller * p)$/;"	f	class:boost::coroutines::detail::pull_coroutine_caller	access:private	signature:( allocator_t & alloc, pull_coroutine_caller * p)
destroy_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    static void destroy_( allocator_t & alloc, pull_coroutine_object * p)$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:( allocator_t & alloc, pull_coroutine_object * p)
destroy_	coroutine/v2/detail/push_coroutine_caller.hpp	/^    static void destroy_( allocator_t & alloc, push_coroutine_caller * p)$/;"	f	class:boost::coroutines::detail::push_coroutine_caller	access:private	signature:( allocator_t & alloc, push_coroutine_caller * p)
destroy_	coroutine/v2/detail/push_coroutine_object.hpp	/^    static void destroy_( allocator_t & alloc, push_coroutine_object * p)$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:( allocator_t & alloc, push_coroutine_object * p)
detail	coroutine/detail/coroutine_context.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/exceptions.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/flags.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/holder.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/param.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/segmented_stack_allocator.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/stack_tuple.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/standard_stack_allocator.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/detail/trampoline.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/exceptions.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/coroutine.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/arg.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/coroutine_base.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/coroutine_base_resume.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/coroutine_caller.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/coroutine_get.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/coroutine_object.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v1/detail/coroutine_op.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v2/detail/pull_coroutine_base.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v2/detail/pull_coroutine_caller.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v2/detail/pull_coroutine_object.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v2/detail/push_coroutine_base.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v2/detail/push_coroutine_caller.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
detail	coroutine/v2/detail/push_coroutine_object.hpp	/^namespace detail {$/;"	n	namespace:boost::coroutines
do_unwind	coroutine/attributes.hpp	/^        do_unwind( do_unwind_),$/;"	p	struct:boost::coroutines::attributes	access:public	signature:( do_unwind_)
do_unwind	coroutine/attributes.hpp	/^        do_unwind( stack_unwind),$/;"	p	struct:boost::coroutines::attributes	access:public	signature:( stack_unwind)
do_unwind	coroutine/attributes.hpp	/^    flag_unwind_t   do_unwind;$/;"	m	struct:boost::coroutines::attributes	access:public
dp_	coroutine/v1/detail/coroutine_op.hpp	/^        D                   *   dp_;$/;"	m	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private
dp_	coroutine/v1/detail/coroutine_op.hpp	/^        D               *   dp_;$/;"	m	class:boost::coroutines::detail::coroutine_op::iterator	access:private
dp_	coroutine/v1/detail/coroutine_op.hpp	/^       D    *   dp_;$/;"	m	class:boost::coroutines::detail::coroutine_op::iterator	access:private
dummy	coroutine/v1/coroutine.hpp	/^    struct dummy$/;"	s	class:boost::coroutines::coroutine	access:private
dummy	coroutine/v2/coroutine.hpp	/^    struct dummy$/;"	s	class:boost::coroutines::pull_coroutine	access:private
dummy	coroutine/v2/coroutine.hpp	/^    struct dummy$/;"	s	class:boost::coroutines::push_coroutine	access:private
ec_	coroutine/exceptions.hpp	/^    system::error_code  ec_;$/;"	m	class:boost::coroutines::coroutine_error	access:private
end	coroutine/v1/coroutine.hpp	/^end( coroutine< Signature > & c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > & c)
end	coroutine/v1/coroutine.hpp	/^end( coroutine< Signature > const& c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const& c)
end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::pull_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > & c)
end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::pull_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > const& c)
end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::push_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > & c)
end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::push_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > const& c)
enter_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    void enter_()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:()
enter_	coroutine/v2/detail/push_coroutine_object.hpp	/^    void enter_()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:()
except_	coroutine/v1/detail/coroutine_base.hpp	/^    exception_ptr       except_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
except_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    exception_ptr       except_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
except_	coroutine/v2/detail/push_coroutine_base.hpp	/^    exception_ptr       except_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
fetch_	coroutine/v1/detail/coroutine_op.hpp	/^        void fetch_()$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private	signature:()
fetch_	coroutine/v1/detail/coroutine_op.hpp	/^        void fetch_()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:private	signature:()
fetch_	coroutine/v2/coroutine.hpp	/^        void fetch_()$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:private	signature:()
flag_complete	coroutine/detail/flags.hpp	/^    flag_complete       = 1 << 1,$/;"	e	enum:boost::coroutines::detail::flag_t
flag_force_unwind	coroutine/detail/flags.hpp	/^    flag_force_unwind   = 1 << 3,$/;"	e	enum:boost::coroutines::detail::flag_t
flag_fpu_t	coroutine/flags.hpp	/^enum flag_fpu_t$/;"	g	namespace:boost::coroutines
flag_preserve_fpu	coroutine/detail/flags.hpp	/^    flag_preserve_fpu   = 1 << 4$/;"	e	enum:boost::coroutines::detail::flag_t
flag_t	coroutine/detail/flags.hpp	/^enum flag_t$/;"	g	namespace:boost::coroutines::detail
flag_unwind_stack	coroutine/detail/flags.hpp	/^    flag_unwind_stack   = 1 << 2,$/;"	e	enum:boost::coroutines::detail::flag_t
flag_unwind_t	coroutine/flags.hpp	/^enum flag_unwind_t$/;"	g	namespace:boost::coroutines
flags_	coroutine/v1/detail/coroutine_base.hpp	/^    int                 flags_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
flags_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    int                 flags_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
flags_	coroutine/v2/detail/push_coroutine_base.hpp	/^    int                 flags_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:protected
fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, arguments arg, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::coroutine	access:public
fn	coroutine/v1/coroutine.hpp	/^    explicit coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::coroutine	access:public
fn	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::pull_coroutine	access:public
fn	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr = attributes(),$/;"	m	class:boost::coroutines::push_coroutine	access:public
fn	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::push_coroutine	access:public
fn	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
fn	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
fn	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	namespace:boost::coroutines
fn	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:public
fn	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( BOOST_RV_REF( Fn) fn, attributes const& attr,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
fn_	coroutine/v2/detail/pull_coroutine_object.hpp	/^        fn_( fn),$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( fn)
fn_	coroutine/v2/detail/pull_coroutine_object.hpp	/^    Fn                      fn_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:private
fn_	coroutine/v2/detail/push_coroutine_object.hpp	/^        fn_( fn),$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( fn)
fn_	coroutine/v2/detail/push_coroutine_object.hpp	/^    Fn                      fn_;$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:private
force_unwind	coroutine/detail/holder.hpp	/^    bool                    force_unwind;$/;"	m	struct:boost::coroutines::detail::holder	access:public
force_unwind	coroutine/detail/holder.hpp	/^    bool                force_unwind;$/;"	m	struct:boost::coroutines::detail::holder	access:public
forced_unwind	coroutine/detail/exceptions.hpp	/^struct forced_unwind {};$/;"	s	namespace:boost::coroutines::detail
forced_unwind	coroutine/exceptions.hpp	/^struct forced_unwind {};$/;"	s	namespace:boost::coroutines::detail
fpu_not_preserved	coroutine/flags.hpp	/^    fpu_not_preserved$/;"	e	enum:boost::coroutines::flag_fpu_t
fpu_preserved	coroutine/flags.hpp	/^    fpu_preserved = 0,$/;"	e	enum:boost::coroutines::flag_fpu_t
get	coroutine/v1/detail/coroutine_get.hpp	/^    typename param< Result >::type get() const$/;"	f	struct:boost::coroutines::detail::coroutine_get	access:public	signature:() const
get	coroutine/v2/detail/pull_coroutine_base.hpp	/^    R & get() const$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:() const
get	coroutine/v2/detail/pull_coroutine_base.hpp	/^    R get() const$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:() const
has_result	coroutine/v1/detail/coroutine_get.hpp	/^    bool has_result() const$/;"	f	struct:boost::coroutines::detail::coroutine_get	access:public	signature:() const
has_result	coroutine/v2/detail/pull_coroutine_base.hpp	/^    bool has_result() const$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:() const
holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_)
holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_, Data data_) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_, Data data_)
holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_, bool force_unwind_ = false) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_, bool force_unwind_ = false)
holder	coroutine/detail/holder.hpp	/^    explicit holder( coroutine_context * ctx_, bool force_unwind_) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( coroutine_context * ctx_, bool force_unwind_)
holder	coroutine/detail/holder.hpp	/^    holder( holder const& other) :$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( holder const& other)
holder	coroutine/detail/holder.hpp	/^struct holder$/;"	s	namespace:boost::coroutines::detail
holder	coroutine/detail/holder.hpp	/^struct holder< void >$/;"	s	namespace:boost::coroutines::detail
impl_	coroutine/v1/coroutine.hpp	/^        impl_()$/;"	f	class:boost::coroutines::coroutine	access:public	signature:()
impl_	coroutine/v1/coroutine.hpp	/^    ptr_t  impl_;$/;"	m	class:boost::coroutines::coroutine	access:private
impl_	coroutine/v2/coroutine.hpp	/^        impl_()$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:()
impl_	coroutine/v2/coroutine.hpp	/^        impl_()$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:()
impl_	coroutine/v2/coroutine.hpp	/^    impl_()$/;"	f	namespace:boost::coroutines	signature:()
impl_	coroutine/v2/coroutine.hpp	/^    ptr_t  impl_;$/;"	m	class:boost::coroutines::pull_coroutine	access:private
impl_	coroutine/v2/coroutine.hpp	/^    ptr_t  impl_;$/;"	m	class:boost::coroutines::push_coroutine	access:private
increment_	coroutine/v1/detail/coroutine_op.hpp	/^        void increment_()$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private	signature:()
increment_	coroutine/v1/detail/coroutine_op.hpp	/^        void increment_()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:private	signature:()
increment_	coroutine/v2/coroutine.hpp	/^        void increment_()$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:private	signature:()
invalid_result	coroutine/exceptions.hpp	/^    invalid_result() :$/;"	f	class:boost::coroutines::invalid_result	access:public	signature:()
invalid_result	coroutine/exceptions.hpp	/^class invalid_result : public coroutine_error$/;"	c	namespace:boost::coroutines	inherits:coroutine_error
is_error_code_enum	coroutine/exceptions.hpp	/^struct is_error_code_enum< coroutines::coroutine_errc > : public true_type$/;"	s	namespace:boost::system	inherits:true_type
is_error_code_enum	coroutine/exceptions.hpp	/^struct is_error_code_enum< coroutines::coroutine_errc::enum_type > : public true_type$/;"	s	namespace:boost::system	inherits:true_type
is_stack_unbound	coroutine/detail/segmented_stack_allocator.hpp	/^    static bool is_stack_unbound();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
is_stack_unbound	coroutine/detail/standard_stack_allocator.hpp	/^    static bool is_stack_unbound();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
iterator	coroutine/v1/detail/coroutine_op.hpp	/^        explicit iterator( D * dp) :$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( D * dp)
iterator	coroutine/v1/detail/coroutine_op.hpp	/^        iterator( iterator const& other) :$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
iterator	coroutine/v1/detail/coroutine_op.hpp	/^        iterator() :$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:()
iterator	coroutine/v1/detail/coroutine_op.hpp	/^    class iterator : public std::iterator< std::input_iterator_tag, typename remove_reference< Result >::type >$/;"	c	struct:boost::coroutines::detail::coroutine_op	inherits:std::iterator	access:public
iterator	coroutine/v1/detail/coroutine_op.hpp	/^    class iterator : public std::iterator< std::output_iterator_tag, void, void, void, void >$/;"	c	struct:boost::coroutines::detail::coroutine_op	inherits:std::iterator	access:public
iterator	coroutine/v2/coroutine.hpp	/^        explicit iterator( push_coroutine< Arg & > * c) :$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( push_coroutine< Arg & > * c)
iterator	coroutine/v2/coroutine.hpp	/^        explicit iterator( push_coroutine< Arg > * c) :$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( push_coroutine< Arg > * c)
iterator	coroutine/v2/coroutine.hpp	/^        iterator() :$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:()
iterator	coroutine/v2/coroutine.hpp	/^    class iterator : public std::iterator< std::output_iterator_tag, void, void, void, void >$/;"	c	class:boost::coroutines::push_coroutine	inherits:std::iterator	access:public
jump	coroutine/detail/coroutine_context.hpp	/^    intptr_t jump( coroutine_context &, intptr_t = 0, bool = true);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( coroutine_context &, intptr_t = 0, bool = true)
make_error_code	coroutine/exceptions.hpp	/^error_code make_error_code( coroutines::coroutine_errc e) \/\/BOOST_NOEXCEPT$/;"	f	namespace:boost::system	signature:( coroutines::coroutine_errc e)
make_error_condition	coroutine/exceptions.hpp	/^error_condition make_error_condition( coroutines::coroutine_errc e) \/\/BOOST_NOEXCEPT$/;"	f	namespace:boost::system	signature:( coroutines::coroutine_errc e)
maximum_stacksize	coroutine/detail/segmented_stack_allocator.hpp	/^    static std::size_t maximum_stacksize();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
maximum_stacksize	coroutine/detail/standard_stack_allocator.hpp	/^    static std::size_t maximum_stacksize();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
minimum_stacksize	coroutine/detail/segmented_stack_allocator.hpp	/^    static std::size_t minimum_stacksize();$/;"	p	class:boost::coroutines::detail::segmented_stack_allocator	access:public	signature:()
minimum_stacksize	coroutine/detail/standard_stack_allocator.hpp	/^    static std::size_t minimum_stacksize();$/;"	p	class:boost::coroutines::detail::standard_stack_allocator	access:public	signature:()
no_stack_unwind	coroutine/flags.hpp	/^    no_stack_unwind$/;"	e	enum:boost::coroutines::flag_unwind_t
nonnull	coroutine/v1/coroutine.hpp	/^    { void nonnull() {} };$/;"	f	struct:boost::coroutines::coroutine::dummy	access:public	signature:()
nonnull	coroutine/v2/coroutine.hpp	/^    { void nonnull() {} };$/;"	f	struct:boost::coroutines::pull_coroutine::dummy	access:public	signature:()
nonnull	coroutine/v2/coroutine.hpp	/^    { void nonnull() {} };$/;"	f	struct:boost::coroutines::push_coroutine::dummy	access:public	signature:()
operator !=	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator!=( const_iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
operator !=	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator!=( iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
operator !=	coroutine/v2/coroutine.hpp	/^        bool operator!=( const_iterator const& other)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
operator !=	coroutine/v2/coroutine.hpp	/^        bool operator!=( iterator const& other)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( iterator const& other)
operator ()	coroutine/v1/detail/coroutine_op.hpp	/^    D & operator()( arg_type a1)$/;"	f	struct:boost::coroutines::detail::coroutine_op	access:public	signature:( arg_type a1)
operator ()	coroutine/v1/detail/coroutine_op.hpp	/^    D & operator()()$/;"	f	struct:boost::coroutines::detail::coroutine_op	access:public	signature:()
operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()( Arg & arg)$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:( Arg & arg)
operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()( Arg && arg) {$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:( Arg && arg)
operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()( Arg const& arg)$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:( Arg const& arg)
operator ()	coroutine/v2/coroutine.hpp	/^    push_coroutine & operator()()$/;"	f	class:boost::coroutines::push_coroutine	access:public	signature:()
operator *	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator*()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:()
operator *	coroutine/v1/detail/coroutine_op.hpp	/^        reference_t operator*() const$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:() const
operator *	coroutine/v1/detail/coroutine_op.hpp	/^        reference_t operator*() const$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:() const
operator *	coroutine/v2/coroutine.hpp	/^        iterator & operator*()$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:()
operator *	coroutine/v2/coroutine.hpp	/^        reference_t operator*() const$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:() const
operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator & operator++()$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:()
operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator operator++( int)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( int)
operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator++()$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:()
operator ++	coroutine/v1/detail/coroutine_op.hpp	/^        iterator operator++( int)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( int)
operator ++	coroutine/v2/coroutine.hpp	/^        const_iterator & operator++()$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:()
operator ++	coroutine/v2/coroutine.hpp	/^        const_iterator operator++( int)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( int)
operator ++	coroutine/v2/coroutine.hpp	/^        iterator & operator++()$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:()
operator ->	coroutine/v1/detail/coroutine_op.hpp	/^        pointer_t operator->() const$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:() const
operator ->	coroutine/v1/detail/coroutine_op.hpp	/^        pointer_t operator->() const$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:() const
operator ->	coroutine/v2/coroutine.hpp	/^        pointer_t operator->() const$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:() const
operator =	coroutine/detail/coroutine_context.hpp	/^    coroutine_context& operator=( coroutine_context const&);$/;"	p	class:boost::coroutines::detail::coroutine_context	access:public	signature:( coroutine_context const&)
operator =	coroutine/detail/holder.hpp	/^    holder & operator=( holder const& other)$/;"	f	struct:boost::coroutines::detail::holder	access:public	signature:( holder const& other)
operator =	coroutine/v1/detail/coroutine_op.hpp	/^        const_iterator & operator=( const_iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
operator =	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator=( arg_type a1)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( arg_type a1)
operator =	coroutine/v1/detail/coroutine_op.hpp	/^        iterator & operator=( iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
operator =	coroutine/v2/coroutine.hpp	/^        const_iterator & operator=( const_iterator const& other)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
operator =	coroutine/v2/coroutine.hpp	/^        iterator & operator=( Arg & a)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( Arg & a)
operator =	coroutine/v2/coroutine.hpp	/^        iterator & operator=( Arg a)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( Arg a)
operator =	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object & operator=( pull_coroutine_object const&);$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:( pull_coroutine_object const&)
operator =	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object & operator=( push_coroutine_object const&);$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:( push_coroutine_object const&)
operator ==	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator==( const_iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public	signature:( const_iterator const& other)
operator ==	coroutine/v1/detail/coroutine_op.hpp	/^        bool operator==( iterator const& other)$/;"	f	class:boost::coroutines::detail::coroutine_op::iterator	access:public	signature:( iterator const& other)
operator ==	coroutine/v2/coroutine.hpp	/^        bool operator==( const_iterator const& other)$/;"	f	class:boost::coroutines::pull_coroutine::const_iterator	access:public	signature:( const_iterator const& other)
operator ==	coroutine/v2/coroutine.hpp	/^        bool operator==( iterator const& other)$/;"	f	class:boost::coroutines::push_coroutine::iterator	access:public	signature:( iterator const& other)
param	coroutine/detail/param.hpp	/^struct param : $/;"	s	namespace:boost::coroutines::detail	inherits:mpl::eval_if
pbase_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^        pbase_type( stack_alloc, attr.size),$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( stack_alloc, attr.size)
pbase_type	coroutine/v2/detail/pull_coroutine_object.hpp	/^    typedef stack_tuple< StackAllocator >               pbase_type;$/;"	t	class:boost::coroutines::detail::pull_coroutine_object	access:private
pbase_type	coroutine/v2/detail/push_coroutine_object.hpp	/^        pbase_type( stack_alloc, attr.size),$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( stack_alloc, attr.size)
pbase_type	coroutine/v2/detail/push_coroutine_object.hpp	/^    typedef stack_tuple< StackAllocator >               pbase_type;$/;"	t	class:boost::coroutines::detail::push_coroutine_object	access:private
pointer_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename const_iterator::pointer      pointer_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public
pointer_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename iterator::pointer      pointer_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::iterator	access:public
pointer_t	coroutine/v2/coroutine.hpp	/^        typedef typename const_iterator::pointer      pointer_t;$/;"	t	class:boost::coroutines::pull_coroutine::const_iterator	access:public
preserve_fpu	coroutine/attributes.hpp	/^        preserve_fpu( fpu_preserved)$/;"	f	struct:boost::coroutines::attributes	access:public	signature:( fpu_preserved)
preserve_fpu	coroutine/attributes.hpp	/^        preserve_fpu( preserve_fpu_)$/;"	f	struct:boost::coroutines::attributes	access:public	signature:( preserve_fpu_)
preserve_fpu	coroutine/attributes.hpp	/^    flag_fpu_t      preserve_fpu;$/;"	m	struct:boost::coroutines::attributes	access:public
ptr_t	coroutine/v1/coroutine.hpp	/^    typedef typename base_t::ptr_t                              ptr_t;$/;"	t	class:boost::coroutines::coroutine	access:private
ptr_t	coroutine/v1/detail/coroutine_base.hpp	/^    typedef intrusive_ptr< coroutine_base >     ptr_t;$/;"	t	class:boost::coroutines::detail::coroutine_base	access:public
ptr_t	coroutine/v2/coroutine.hpp	/^    typedef base_t::ptr_t                        ptr_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
ptr_t	coroutine/v2/coroutine.hpp	/^    typedef base_t::ptr_t                       ptr_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
ptr_t	coroutine/v2/coroutine.hpp	/^    typedef typename base_t::ptr_t                  ptr_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
ptr_t	coroutine/v2/coroutine.hpp	/^    typedef typename base_t::ptr_t              ptr_t;$/;"	t	class:boost::coroutines::pull_coroutine	access:private
ptr_t	coroutine/v2/coroutine.hpp	/^    typedef typename base_t::ptr_t              ptr_t;$/;"	t	class:boost::coroutines::push_coroutine	access:private
ptr_t	coroutine/v2/detail/pull_coroutine_base.hpp	/^    typedef intrusive_ptr< pull_coroutine_base >     ptr_t;$/;"	t	class:boost::coroutines::detail::pull_coroutine_base	access:public
ptr_t	coroutine/v2/detail/push_coroutine_base.hpp	/^    typedef intrusive_ptr< push_coroutine_base >     ptr_t;$/;"	t	class:boost::coroutines::detail::push_coroutine_base	access:public
pull	coroutine/v2/detail/pull_coroutine_base.hpp	/^    void pull()$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:()
pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    explicit pull_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::pull_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< pull_coroutine > const& alloc = std::allocator< pull_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, pull_coroutine >, dummy * >::type = 0)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    pull_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::pull_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    pull_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::pull_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc, optional< R * > const& result)
pull_coroutine	coroutine/v2/coroutine.hpp	/^    pull_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::pull_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc, optional< R > const& result)
pull_coroutine	coroutine/v2/coroutine.hpp	/^class pull_coroutine$/;"	c	namespace:boost::coroutines
pull_coroutine	coroutine/v2/coroutine.hpp	/^class pull_coroutine< R & >$/;"	c	namespace:boost::coroutines
pull_coroutine	coroutine/v2/coroutine.hpp	/^class pull_coroutine< void >$/;"	c	namespace:boost::coroutines
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu)
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu, optional< R * > const& result)
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu, optional< R > const& result)
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    pull_coroutine_base( coroutine_context::ctx_fn fn,$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:( coroutine_context::ctx_fn fn, stack_context * stack_ctx, bool unwind, bool preserve_fpu)
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^class pull_coroutine_base : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^class pull_coroutine_base< R & > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^class pull_coroutine_base< void > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        pull_coroutine_base< R & >( callee, unwind, preserve_fpu, data),$/;"	p	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu, data)
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        pull_coroutine_base< R >( callee, unwind, preserve_fpu, data),$/;"	p	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu, data)
pull_coroutine_base	coroutine/v2/detail/pull_coroutine_caller.hpp	/^        pull_coroutine_base< void >( callee, unwind, preserve_fpu),$/;"	p	class:boost::coroutines::detail::pull_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu)
pull_coroutine_caller	coroutine/v2/detail/pull_coroutine_caller.hpp	/^class pull_coroutine_caller : public  pull_coroutine_base< R >$/;"	c	namespace:boost::coroutines::detail	inherits:pull_coroutine_base
pull_coroutine_caller	coroutine/v2/detail/pull_coroutine_caller.hpp	/^class pull_coroutine_caller< R &, Allocator > : public  pull_coroutine_base< R & >$/;"	c	namespace:boost::coroutines::detail	inherits:pull_coroutine_base
pull_coroutine_caller	coroutine/v2/detail/pull_coroutine_caller.hpp	/^class pull_coroutine_caller< void, Allocator > : public  pull_coroutine_base< void >$/;"	c	namespace:boost::coroutines::detail	inherits:pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( Fn && fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( Fn && fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( const reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( const reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( const reference_wrapper< Fn > fn,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( const reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( pull_coroutine_object &);$/;"	p	class:boost::coroutines::detail::pull_coroutine_object	access:private	signature:( pull_coroutine_object &)
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    pull_coroutine_object( reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:( reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object : private stack_tuple< StackAllocator >,$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R &, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R &, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R &, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< R, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< void, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< void, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^class pull_coroutine_object< void, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,pull_coroutine_base
pull_type	coroutine/v2/coroutine.hpp	/^    typedef pull_coroutine< T > pull_type;$/;"	t	struct:boost::coroutines::coroutine	access:public
push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push( Arg & arg)$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( Arg & arg)
push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push( Arg && arg)$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( Arg && arg)
push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push( Arg const& arg)$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( Arg const& arg)
push	coroutine/v2/detail/push_coroutine_base.hpp	/^    void push()$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:()
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( Fn fn, attributes const& attr = attributes(),$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( Fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( Fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( Fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr = attributes(),$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr = attributes(), stack_allocator const& stack_alloc = stack_allocator(), std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc = std::allocator< push_coroutine >(), typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    explicit push_coroutine(coroutine_fn fn, attributes const& attr,$/;"	p	class:boost::coroutines::push_coroutine	access:public	signature:(coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type = 0)
push_coroutine	coroutine/v2/coroutine.hpp	/^    push_coroutine( detail::coroutine_context const& callee,$/;"	f	class:boost::coroutines::push_coroutine	access:private	signature:( detail::coroutine_context const& callee, bool unwind, bool preserve_fpu, Allocator const& alloc)
push_coroutine	coroutine/v2/coroutine.hpp	/^class push_coroutine$/;"	c	namespace:boost::coroutines
push_coroutine	coroutine/v2/coroutine.hpp	/^class push_coroutine< Arg & >$/;"	c	namespace:boost::coroutines
push_coroutine	coroutine/v2/coroutine.hpp	/^class push_coroutine< void >$/;"	c	namespace:boost::coroutines
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg & >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< Arg >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( Fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, typename disable_if< is_convertible< Fn &, BOOST_RV_REF( Fn) >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, Allocator const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, StackAllocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine	coroutine/v2/coroutine.hpp	/^push_coroutine< void >::push_coroutine( coroutine_fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::push_coroutine	signature:( coroutine_fn fn, attributes const& attr, stack_allocator const& stack_alloc, std::allocator< push_coroutine > const& alloc, disable_if< is_same< typename decay< coroutine_fn >::type, push_coroutine >, dummy * >::type)
push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^    push_coroutine_base( coroutine_context const& callee,$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( coroutine_context const& callee, bool unwind, bool preserve_fpu)
push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^    push_coroutine_base( coroutine_context::ctx_fn fn,$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:( coroutine_context::ctx_fn fn, stack_context * stack_ctx, bool unwind, bool preserve_fpu)
push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^class push_coroutine_base : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^class push_coroutine_base< Arg & > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^class push_coroutine_base< void > : private noncopyable$/;"	c	namespace:boost::coroutines::detail	inherits:noncopyable
push_coroutine_base	coroutine/v2/detail/push_coroutine_caller.hpp	/^        push_coroutine_base< Arg >( callee, unwind, preserve_fpu),$/;"	p	class:boost::coroutines::detail::push_coroutine_caller	access:public	signature:( callee, unwind, preserve_fpu)
push_coroutine_caller	coroutine/v2/detail/push_coroutine_caller.hpp	/^class push_coroutine_caller : public  push_coroutine_base< Arg >$/;"	c	namespace:boost::coroutines::detail	inherits:push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( Fn && fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( Fn && fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( Fn fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( Fn fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( const reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( const reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( push_coroutine_object &);$/;"	p	class:boost::coroutines::detail::push_coroutine_object	access:private	signature:( push_coroutine_object &)
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    push_coroutine_object( reference_wrapper< Fn > fn, attributes const& attr,$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:( reference_wrapper< Fn > fn, attributes const& attr, StackAllocator const& stack_alloc, allocator_t const& alloc)
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object : private stack_tuple< StackAllocator >,$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg &, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg &, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg &, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< Arg, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< void, Fn, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< void, const reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^class push_coroutine_object< void, reference_wrapper< Fn >, StackAllocator, Allocator, Caller > :$/;"	c	namespace:boost::coroutines::detail	inherits:stack_tuple,push_coroutine_base
push_type	coroutine/v2/coroutine.hpp	/^    typedef push_coroutine< T > push_type;$/;"	t	struct:boost::coroutines::coroutine	access:public
range_begin	coroutine/v1/coroutine.hpp	/^range_begin( coroutine< Signature > & c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > & c)
range_begin	coroutine/v1/coroutine.hpp	/^range_begin( coroutine< Signature > const& c)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const& c)
range_begin	coroutine/v2/coroutine.hpp	/^range_begin( pull_coroutine< R > & c)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > & c)
range_begin	coroutine/v2/coroutine.hpp	/^range_begin( pull_coroutine< R > const& c)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > const& c)
range_begin	coroutine/v2/coroutine.hpp	/^range_begin( push_coroutine< Arg > & c)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > & c)
range_begin	coroutine/v2/coroutine.hpp	/^range_begin( push_coroutine< Arg > const& c)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > const& c)
range_const_iterator	coroutine/v1/coroutine.hpp	/^struct range_const_iterator< coroutines::coroutine< Signature > >$/;"	s	namespace:boost
range_const_iterator	coroutine/v2/coroutine.hpp	/^struct range_const_iterator< coroutines::pull_coroutine< R > >$/;"	s	namespace:boost
range_const_iterator	coroutine/v2/coroutine.hpp	/^struct range_const_iterator< coroutines::push_coroutine< Arg > >$/;"	s	namespace:boost
range_end	coroutine/v1/coroutine.hpp	/^range_end( coroutine< Signature > &)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > &)
range_end	coroutine/v1/coroutine.hpp	/^range_end( coroutine< Signature > const&)$/;"	f	namespace:boost::coroutines	signature:( coroutine< Signature > const&)
range_end	coroutine/v2/coroutine.hpp	/^range_end( pull_coroutine< R > &)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > &)
range_end	coroutine/v2/coroutine.hpp	/^range_end( pull_coroutine< R > const&)$/;"	f	namespace:boost::coroutines	signature:( pull_coroutine< R > const&)
range_end	coroutine/v2/coroutine.hpp	/^range_end( push_coroutine< Arg > &)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > &)
range_end	coroutine/v2/coroutine.hpp	/^range_end( push_coroutine< Arg > const&)$/;"	f	namespace:boost::coroutines	signature:( push_coroutine< Arg > const&)
range_mutable_iterator	coroutine/v1/coroutine.hpp	/^struct range_mutable_iterator< coroutines::coroutine< Signature > >$/;"	s	namespace:boost
range_mutable_iterator	coroutine/v2/coroutine.hpp	/^struct range_mutable_iterator< coroutines::pull_coroutine< R > >$/;"	s	namespace:boost
range_mutable_iterator	coroutine/v2/coroutine.hpp	/^struct range_mutable_iterator< coroutines::push_coroutine< Arg > >$/;"	s	namespace:boost
reference_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename const_iterator::reference    reference_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::const_iterator	access:public
reference_t	coroutine/v1/detail/coroutine_op.hpp	/^        typedef typename iterator::reference    reference_t;$/;"	t	class:boost::coroutines::detail::coroutine_op::iterator	access:public
reference_t	coroutine/v2/coroutine.hpp	/^        typedef typename const_iterator::reference    reference_t;$/;"	t	class:boost::coroutines::pull_coroutine::const_iterator	access:public
result_	coroutine/v1/detail/coroutine_base_resume.hpp	/^    optional< Result >  result_;$/;"	m	class:boost::coroutines::detail::coroutine_base_resume	access:protected
result_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    optional< R * >     result_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
result_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    optional< R >       result_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:protected
resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^    void resume( arg_type a1)$/;"	f	class:boost::coroutines::detail::coroutine_base_resume	access:public	signature:( arg_type a1)
resume	coroutine/v1/detail/coroutine_base_resume.hpp	/^    void resume()$/;"	f	class:boost::coroutines::detail::coroutine_base_resume	access:public	signature:()
run	coroutine/v2/detail/pull_coroutine_object.hpp	/^    void run()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:()
run	coroutine/v2/detail/push_coroutine_object.hpp	/^    void run()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:()
safe_bool	coroutine/v1/coroutine.hpp	/^    typedef void ( dummy::*safe_bool)();$/;"	t	class:boost::coroutines::coroutine	access:private
safe_bool	coroutine/v2/coroutine.hpp	/^    typedef void ( dummy::*safe_bool)();$/;"	t	class:boost::coroutines::pull_coroutine	access:private
safe_bool	coroutine/v2/coroutine.hpp	/^    typedef void ( dummy::*safe_bool)();$/;"	t	class:boost::coroutines::push_coroutine	access:private
segmented_stack_allocator	coroutine/detail/segmented_stack_allocator.hpp	/^class BOOST_COROUTINES_DECL segmented_stack_allocator$/;"	c	namespace:boost::coroutines::detail
segments_context	coroutine/stack_context.hpp	/^    typedef void *  segments_context[BOOST_COROUTINES_SEGMENTS];$/;"	t	struct:boost::coroutines::stack_context	access:public
segments_ctx	coroutine/stack_context.hpp	/^    segments_context        segments_ctx;$/;"	m	struct:boost::coroutines::stack_context	access:public
size	coroutine/attributes.hpp	/^    std::size_t     size;$/;"	m	struct:boost::coroutines::attributes	access:public
size	coroutine/stack_context.hpp	/^    std::size_t             size;$/;"	m	struct:boost::coroutines::stack_context	access:public
sp	coroutine/stack_context.hpp	/^    void                *   sp;$/;"	m	struct:boost::coroutines::stack_context	access:public
sp_	coroutine/checkpoint.hpp	/^    void            *   sp_;$/;"	m	class:boost::coroutines::checkpoint	access:private
stack_alloc	coroutine/detail/stack_tuple.hpp	/^    StackAllocator              stack_alloc;$/;"	m	struct:boost::coroutines::detail::stack_tuple	access:public
stack_alloc	coroutine/v1/coroutine.hpp	/^               StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::coroutine	access:public
stack_alloc	coroutine/v1/coroutine.hpp	/^               stack_allocator const& stack_alloc =$/;"	m	class:boost::coroutines::coroutine	access:public
stack_alloc	coroutine/v2/coroutine.hpp	/^               StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::push_coroutine	access:public
stack_alloc	coroutine/v2/coroutine.hpp	/^               stack_allocator const& stack_alloc =$/;"	m	class:boost::coroutines::pull_coroutine	access:public
stack_alloc	coroutine/v2/coroutine.hpp	/^               stack_allocator const& stack_alloc =$/;"	m	class:boost::coroutines::push_coroutine	access:public
stack_alloc	coroutine/v2/coroutine.hpp	/^           StackAllocator const& stack_alloc,$/;"	m	namespace:boost::coroutines
stack_alloc	coroutine/v2/coroutine.hpp	/^           stack_allocator const& stack_alloc,$/;"	m	namespace:boost::coroutines
stack_alloc	coroutine/v2/detail/pull_coroutine_object.hpp	/^                           StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::detail::pull_coroutine_object	access:public
stack_alloc	coroutine/v2/detail/push_coroutine_object.hpp	/^                           StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
stack_alloc	coroutine/v2/detail/push_coroutine_object.hpp	/^                      StackAllocator const& stack_alloc,$/;"	m	class:boost::coroutines::detail::push_coroutine_object	access:public
stack_allocator	coroutine/stack_allocator.hpp	/^typedef detail::segmented_stack_allocator   stack_allocator;$/;"	t	namespace:boost::coroutines
stack_context	coroutine/stack_context.hpp	/^    stack_context() :$/;"	f	struct:boost::coroutines::stack_context	access:public	signature:()
stack_context	coroutine/stack_context.hpp	/^struct stack_context$/;"	s	namespace:boost::coroutines
stack_ctx	coroutine/detail/stack_tuple.hpp	/^    coroutines::stack_context   stack_ctx;$/;"	m	struct:boost::coroutines::detail::stack_tuple	access:public
stack_ctx_	coroutine/detail/coroutine_context.hpp	/^    stack_context       *   stack_ctx_;$/;"	m	class:boost::coroutines::detail::coroutine_context	access:private
stack_tuple	coroutine/detail/stack_tuple.hpp	/^    stack_tuple( StackAllocator const& stack_alloc_, std::size_t size) :$/;"	f	struct:boost::coroutines::detail::stack_tuple	access:public	signature:( StackAllocator const& stack_alloc_, std::size_t size)
stack_tuple	coroutine/detail/stack_tuple.hpp	/^struct stack_tuple$/;"	s	namespace:boost::coroutines::detail
stack_unwind	coroutine/flags.hpp	/^    stack_unwind = 0,$/;"	e	enum:boost::coroutines::flag_unwind_t
standard_stack_allocator	coroutine/detail/standard_stack_allocator.hpp	/^class BOOST_COROUTINES_DECL standard_stack_allocator$/;"	c	namespace:boost::coroutines::detail
std	coroutine/v2/coroutine.hpp	/^namespace std {$/;"	n
std::begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::pull_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > & c)
std::begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::pull_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > const& c)
std::begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::push_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > & c)
std::begin	coroutine/v2/coroutine.hpp	/^begin( boost::coroutines::push_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > const& c)
std::end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::pull_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > & c)
std::end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::pull_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::pull_coroutine< R > const& c)
std::end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::push_coroutine< R > & c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > & c)
std::end	coroutine/v2/coroutine.hpp	/^end( boost::coroutines::push_coroutine< R > const& c)$/;"	f	namespace:std	signature:( boost::coroutines::push_coroutine< R > const& c)
system	coroutine/exceptions.hpp	/^namespace system {$/;"	n	namespace:boost
trampoline1	coroutine/detail/trampoline.hpp	/^void trampoline1( intptr_t vp)$/;"	f	namespace:boost::coroutines::detail	signature:( intptr_t vp)
trampoline2	coroutine/detail/trampoline.hpp	/^void trampoline2( intptr_t vp)$/;"	f	namespace:boost::coroutines::detail	signature:( intptr_t vp)
type	coroutine/v1/coroutine.hpp	/^               >::type = 0) :$/;"	m	class:boost::coroutines::coroutine::disable_if	access:public
type	coroutine/v1/coroutine.hpp	/^{ typedef C< typename detail::arg< Signature >::type( Result), 1 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
type	coroutine/v1/coroutine.hpp	/^{ typedef C< typename detail::arg< Signature >::type(), 0 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
type	coroutine/v1/coroutine.hpp	/^{ typedef C< void( Result), 1 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
type	coroutine/v1/coroutine.hpp	/^{ typedef C< void(), 0 > type; };$/;"	t	struct:boost::coroutines::detail::caller	access:public
type	coroutine/v1/coroutine.hpp	/^{ typedef typename coroutines::coroutine< Signature >::const_iterator type; };$/;"	t	struct:boost::range_const_iterator	access:public
type	coroutine/v1/coroutine.hpp	/^{ typedef typename coroutines::coroutine< Signature >::iterator type; };$/;"	t	struct:boost::range_mutable_iterator	access:public
type	coroutine/v1/detail/arg.hpp	/^    typedef typename function_traits< Signature >::arg1_type    type;$/;"	t	struct:boost::coroutines::detail::arg	access:public
type	coroutine/v2/coroutine.hpp	/^               >::type = 0) :$/;"	m	class:boost::coroutines::pull_coroutine::disable_if	access:public
type	coroutine/v2/coroutine.hpp	/^               >::type = 0);$/;"	m	class:boost::coroutines::push_coroutine::disable_if	access:public
type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::pull_coroutine< R >::const_iterator type; };$/;"	t	struct:boost::range_const_iterator	access:public
type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::pull_coroutine< R >::iterator type; };$/;"	t	struct:boost::range_mutable_iterator	access:public
type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::push_coroutine< Arg >::const_iterator type; };$/;"	t	struct:boost::range_const_iterator	access:public
type	coroutine/v2/coroutine.hpp	/^{ typedef typename coroutines::push_coroutine< Arg >::iterator type; };$/;"	t	struct:boost::range_mutable_iterator	access:public
use_count_	coroutine/v1/detail/coroutine_base.hpp	/^    unsigned int        use_count_;$/;"	m	class:boost::coroutines::detail::coroutine_base	access:private
use_count_	coroutine/v2/detail/pull_coroutine_base.hpp	/^    unsigned int        use_count_;$/;"	m	class:boost::coroutines::detail::pull_coroutine_base	access:private
use_count_	coroutine/v2/detail/push_coroutine_base.hpp	/^    unsigned int        use_count_;$/;"	m	class:boost::coroutines::detail::push_coroutine_base	access:private
val_	coroutine/v1/detail/coroutine_op.hpp	/^        optional< Result >      val_;$/;"	m	class:boost::coroutines::detail::coroutine_op::const_iterator	access:private
val_	coroutine/v1/detail/coroutine_op.hpp	/^        optional< Result >  val_;$/;"	m	class:boost::coroutines::detail::coroutine_op::iterator	access:private
val_	coroutine/v2/coroutine.hpp	/^        optional< R & >             val_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
val_	coroutine/v2/coroutine.hpp	/^        optional< R >           val_;$/;"	m	class:boost::coroutines::pull_coroutine::const_iterator	access:private
what	coroutine/exceptions.hpp	/^    const char* what() const throw()$/;"	f	class:boost::coroutines::coroutine_error	access:public	signature:() const
~coroutine_base	coroutine/v1/detail/coroutine_base.hpp	/^    virtual ~coroutine_base()$/;"	f	class:boost::coroutines::detail::coroutine_base	access:public	signature:()
~pull_coroutine_base	coroutine/v2/detail/pull_coroutine_base.hpp	/^    virtual ~pull_coroutine_base()$/;"	f	class:boost::coroutines::detail::pull_coroutine_base	access:public	signature:()
~pull_coroutine_object	coroutine/v2/detail/pull_coroutine_object.hpp	/^    ~pull_coroutine_object()$/;"	f	class:boost::coroutines::detail::pull_coroutine_object	access:public	signature:()
~push_coroutine_base	coroutine/v2/detail/push_coroutine_base.hpp	/^    virtual ~push_coroutine_base()$/;"	f	class:boost::coroutines::detail::push_coroutine_base	access:public	signature:()
~push_coroutine_object	coroutine/v2/detail/push_coroutine_object.hpp	/^    ~push_coroutine_object()$/;"	f	class:boost::coroutines::detail::push_coroutine_object	access:public	signature:()
~stack_tuple	coroutine/detail/stack_tuple.hpp	/^    ~stack_tuple()$/;"	f	struct:boost::coroutines::detail::stack_tuple	access:public	signature:()
